<!-- 

  gpolygons.xml    FinInG package documentation
                                                                   John Bamberg
                                                              and Philippe Cara
                                                               and Jan De Beule
                                                             and Michel Lavrauw
                                                                  and Maska Law
                                                             and Michael Pauley
                                                            and Max Neunhoeffer
                                                              and Sven Reichard

  Copyright 2009 University of Western Australia, Perth
                 Lehrstuhl D fuer Mathematik, RWTH Aachen
                 Ghent University
                 Colorado State University
                 Vrije Universiteit Brussel

This is the chapter of the documentation describing generalised polygons.
-->


<!--
Documentaion check-list:
- Projective planes
  - ProjectivePlaneByBlocks (done)
  - ProjectivePlaneByIncidenceMatrix (done)
- Generalised Quadrangles
  - Kantor families (done)
  - q Clans and BLT sets (done)
- Generalised Hexagons (done)
- General operations
  - Order (done)
  - AmbientSpace (done)
  - CollineationGroup (done)
  - CollineationAction (done)
  - BlockDesignOfGeneralisedPolygon
  - IncidenceGraphOfGeneralisedPolygon
  - IncidenceMatrixOfGeneralisedPolygon

-->


<Chapter Label="gpolygons">
<Heading>Generalised Polygons</Heading>

A <E>generalised n-gon</E> is a point/line geometry whose incidence graph is bipartite
of diameter <A>n</A> and girth <A>2n</A>. Although these rank 2 structures are very
much a subdomain of <Package>Grape</Package> and <Package>Design</Package>, their significance in
finite geometry warrants their inclusion in <Package>FinInG</Package>. By the famous
theorem of Feit and Higman, a generalised n-gon which has at least three points on every line,
must have <M>n</M> in <M>\{2,3,4,6,8 \}</M>. The case <M>n=2</M> concerns the complete multipartite graphs,
which we disregard. The more interesting cases are accordingly projective planes (<M>n=3</M>),
generalised quadrangles (<M>n=4</M>), generalised hexagons (<M>n=6</M>) and generalised octagons (<M>n=8</M>).
<P/>
<Package>FinInG</Package> provides some basic functionality to deal with generalised polygons as
incidence geometries. A lot of non-trivial interaction with the package <Package>grape</Package> has been
very useful and even necessary. Currently, generic functions to create generalised polygons, to create
elements of generalised polygons, and to explore the elements are implemented. This generic functionaliy
allows the user to construct generalised polygons through many different objects available in
GAP and <Package>FinInG</Package>. Apart from these generic functions, some particular generalised polygons are
available: the classical generalised hexagons and elation generalised quadrangles from different perspectives
can be constructed.<P/>


<Section>
<Heading>Categories</Heading>

<ManSection>
<Filt Name="IsGeneralisedPolygon" Type="Category"/>
<Filt Name="IsGeneralisedPolygonRep" Type="Representation"/>
<Description>
This category is a subcategory of <C>IsIncidenceGeometry</C>, and contains all generalised polygons.
Generalised polygons constructed through functions described in this chapter, all belong
to <C>IsGeneralisedPolygonRep</C>.
</Description>
</ManSection>

<ManSection>
<Filt Name="IsProjectivePlane" Type="Category"/>
<Filt Name="IsGeneralisedQuadrangle" Type="Category"/>
<Filt Name="IsGeneralisedHexagon" Type="Category"/>
<Filt Name="IsGeneralisedOctagon" Type="Category"/>
<Description>
All generalised polygons in <Package>FinInG</Package> belong to one of these four categories. It is not
possible to construct generalised polygons of which the gonality is not known (or checked). Note that the
classical generalised quadrangles (which are the classical polar spaces of rank 2) belong
also to <C>IsGeneralisedQuadrangle</C> and that the desarguesian projective planes (which are the projective
spaces of dimension 2) also belong to <C>IsProjectivePlane</C>, but both do not belong
to <C>IsGeneralisedPolygonRep</C>.
</Description>
</ManSection>

</Section>

<Section>
<Heading>Generic functions to create generalised polygons</Heading>

<ManSection>
<Oper Name="GeneralisedPolygonByBlocks" Arg="l"/>
<Returns>a generalised polygon</Returns>
<Description>
The argument <A>l</A> is a finite homogeneous list consisting of
ordered sets of a common size <M>n+1</M>. This operation will assume that
each element of <A>l</A> represents a line of the generalised polygon. Its
points are assumed to be the union of all elements of <A>l</A>. The incidence
is assumed to be symmetrised containment. From this information, an incidence
grap is coputed using <Package>grape</Package>. If this graph has diameter <M>d</M>
and girth <M>2d</M>, with <M>d \in \{3,4,6,8\}</M>, a generalised polygon is returned.
Note that for large input, this operation can be time consuming.
<Example>
<#Include SYSTEM "../examples/include/gpolygons_gpbyblocks.include">
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="GeneralisedPolygonByIncidenceMatrix" Arg="incmat"/>
<Returns>a generalised polygon</Returns>
<Description>
The argument <M>incmat</M> is a matrix representing the incidence matrix of a point line geometry.
The points are represented by the columns, the rows represent the lines. From <A>incmat</A> a homogeneous
list of sets of column entries is derived, which is then passed to <F>GeneralisedPolygonByBlocks</F>. When
<A>incmat</A> indeed represets a generalised poygon, it is returned. The checks are performed
by <F>GeneralisedPolygonByBlocks</F>.
<Example>
<#Include SYSTEM "../examples/include/gpolygons_gpbyincmat.include">
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="GeneralisedPolygonByElements" Arg="pts, lns, inc"/>
<Oper Name="GeneralisedPolygonByElements" Arg="pts, lns, inc, grp, act"/>
<Returns>a generalised polygon</Returns>
<Description>
The argument <A>pts</A>, <A>lns</A> and <A>inc</A> are respectively a set of objects, a set of objects
and a function. The function <A>inc</A> must represent an incidence relation between objects of <A>pts</A>
and <A>lns</A>. The first version of <F>GeneralisedPolygonByElements</F> will construct an incidence graph, and
if this graph has diameter <M>d</M> and girth <M>2d</M>, with <M>d \in \{3,4,6,8\}</M>,
a generalised polygon is returned. The argument <A>grp</A> is a group, and <A>act</A> a function, representing
an action of the elements of <A>grp</A> on the objects in the lists <A>pts</A> and <A>lns</A>, preserving
the incidence. The second version of <F>GeneralisedPolygonByElements</F> will construct an incidence graph, and
if this graph has diameter <M>d</M> and girth <M>2d</M>, with <M>d \in \{3,4,6,8\}</M>,
a generalised polygon is returned. If <A>grp</A> is a non trivial group, the construction of the graph will
be faster. This operation can be typically used to construct generalised polygons from objects that are available
in <Package>Fining</Package>. This difference in time is shown in the first two examples. The third examples
shows the construction of the generalised quadrangle <M>T_2(O)</M>.
<Example>
<#Include SYSTEM "../examples/include/gpolygons_gpbyelements.include">
</Example>
</Description>
</ManSection>

</Section>

<Section>
<Heading>Attributes and operations for generalised polygons</Heading>

All operations described in this section are applicable on objects in the category <C>IsGeneralisedPolygon</C>.

<ManSection>
<Attr Name="Order" Arg="gp"/>
<Returns>a pair of positive integers</Returns>
<Description>
This method returns the parameters <M>(s,t)</M> of the generalised polygon <A>gp</A>. That is,
<M>s+1</M> is the number of points on any line of <A>gp</A>, and <M>t+1</M> is the number
of lines incident with any point of <A>gp</A>.
</Description>
</ManSection>

<ManSection>
<Attr Name="IncidenceGraphOfGeneralisedPolygon" Arg="gp"/>
<Returns>a graph</Returns>
<Description>
This method allows one to use the GAP package <Package>GRAPE</Package> 
to analyse a generalised polygon, so the user must first load this package.
The argument <A>gp</A> is a generalised polygon, and if it has a collineation group,
then the incidence graph is computed with this extra information and thus the resulting
graph is easier to work with. Likewise, if <A>gp</A> is an elation
generalised quadrangle and it has an elation group, then we use the elation group's action
to efficiently compute the incidence graph.

We should also point out that this method returns a <E>mutable</E> attribute
of <A>gp</A>, so that accquired information about the incidence graph can be added. For example,
the automorphism group of the incidence graph may be computed and stored as a record component 
after the incidence graph is stored as an attribute of <A>gp</A>. Normally, attributes of GAP objects are immutable.
<Example>
<#Include SYSTEM "../examples/include/gpolygons_incgraph.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Attr Name="IncidenceMatrixOfGeneralisedPolygon" Arg="gp"/>
<Returns>a matrix</Returns>
<Description>
This method returns the incidence matrix of the generalised polygon via
the operation <C>CollapsedAdjacencyMat</C> in the <Package>GRAPE</Package>
package (so you need to load this package first). The rows of the matrix
correspond to the points of <A>gp</A>, and the columns correspond to the lines.
<Example>
<#Include SYSTEM "../examples/include/gpolygons_incmatrix.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Attr Name="CollineationGroup" Arg="gp"/>
<Returns>a group</Returns>
<Description>
Some of our generalised polygons come equipped automatically with a collineation group.
For example, the generalised hexagons have their collineation groups already installed,
and so do the classical generalised quadrangles. However, the collineation group
of a projective plane is calculated using the package <Package>Grape</Package>.
We refer to <Ref Oper="CollineationAction"/> for an example.
</Description>
</ManSection>

<ManSection>
<Attr Name="CollineationAction" Arg="gp"/>
<Returns>a function</Returns>
<Description>
Unlike some of the other geometries in <Package>FinInG</Package>, the collineations of
generalised polygons to not have a uniform representation. Thus depending on the generalised
polygon we are working with, a group element and its action could be very different. For example,
we use ordinary permutations when acting on the elements of a projective plane (modulo some
wrapping), whereas elation generalised quadrangles arising from Kantor families must
employ a completely different group action. So our collineation groups come equipped with
the attribute <C>CollineationAction</C>, which is a function with input a pair <A>(x,g)</A> 
where <A>x</A> is an element of <A>gp</A>, and <A>g</A> is a collineation.
<Example>
<#Include SYSTEM "../examples/include/gpolygons_collineations.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Attr Name="BlockDesignOfGeneralisedPolygon" Arg="gp"/>
<Returns>a block design</Returns>
<Description>
This method allows one to use the GAP package <Package>DESIGN</Package> 
to analyse a generalised polygon, so the user must first load this package.
The argument <A>gp</A> is a generalised polygon, and if it has a collineation group,
then the block design is computed with this extra information and thus the resulting
design is easier to work with. Likewise, if <A>gp</A> is an elation
generalised quadrangle and it has an elation group, then we use the elation group's action
to efficiently compute the block design.

We should also point out that this method returns a <E>mutable</E> attribute
of <A>gp</A>, so that accquired information about the block design can be added. For example,
the automorphism group of the block design may be computed after the design is stored
as an attribute of <A>gp</A>. Normally, attributes of GAP objects are immutable.
<Example>
<#Include SYSTEM "../examples/include/gpolygons_blockdesign.include"> 
</Example>
</Description>
</ManSection>

</Section>

<Section>
<Heading>Elements of generalised polygons</Heading>

<ManSection>
<Attr Name="ElementsOfIncidencStructure" Arg="gp, i"/>
<Attr Name="Points" Arg="gp"/>
<Attr Name="Lines" Arg="gp"/>
<Returns>a collection of elements of a generalised polygon</Returns>
<Description>
<A>gp</A> is any generalised polygon, <A>i</A> is a natural number, necessarily <M>1</M> or <M>2</M>.
<F>ElementsOfIncidencStructure</F> returns the elements of type <M>i</M> of <A>gp</A>, <F>Ponints</F>
and <F>Lines</F> are the usual shortcuts.
<Example>
</Example>
</Description>
</ManSection>

<ManSection>
<Attr Name="ObjectToElement" Arg="gp, obj"/>
<Returns>a collection of elements of a generalised polygon</Returns>
<Description>
To create particular objects.
<Example>
</Example>
</Description>
</ManSection>

</Section>

</Chapter>



