<!-- 

  incidence_geometry.xml    FinInG package documentation
                                                                   John Bamberg
                                                               and Jan De Beule
                                                                  and Maska Law
                                                             and Michael Pauley
                                                            and Max Neunhoeffer
                                                              and Sven Reichard

  Copyright (C) 2009, University of Western Australia
                      Lehrstuhl D fuer Mathematik
                      Ghent University

This is the chapter of the documentation describing incidence geometry
in general.

-->

<Chapter Label="incidencegeometry">
<Heading>Incidence Geometry</Heading>

The term geometry, or incidence geometry, is interpreted broadly in this package.
The basis for the construction of the objects in this package is an abstract
incidence geometry consisting of elements, types, and an incidence relation. 
To be more specific, an <E>incidence geometry</E> consists of a set of elements
a symmetric relation on the elements and a type function from the set of
elements to an index set (i.e., every element has a ``type''). There are two axioms: 
(i) no two elements of the same type are incident; (ii) every maximal flag contains
an element of each type. Thus, a projective 5-space is an incidence geometry
with five types of elements; points, lines, planes, solids, and hyperplanes.<P/>

<Package>FinInG</Package> concerns itself primarily with the most
commonly studied incidence geometries of rank more than 2: projective spaces,
polar spaces, and affine spaces. However, some facility with generalised polygons
has been included. Throughout, no matter the geometry, we have made the convention that
an element of type 1 is a ``point'', an element of type 2 is a ``line'', and so forth.
The examples we use in this section use projective spaces, which have not introduced the 
reader to yet in this manual. For further information on projective spaces,
see Chapter <Ref Chap="projective_spaces"/>.<P/>

In this chapter we describe functionality that is <B>declared</B> for 
incidence structures, which does not imply that operations described here will work
for arbitrarily user constructed incidence structures. Its aim is furthermore to allow
the user to become a bit familiar with the general philiosophy of the package, using examples
that are in fact self-explanatory. Not all details of the commands used in the examples will
be explained in this chapter, therefore we refer always to the relevant chapter of the commands,
easily found using the index.

<Section>
<Heading>Incidence structures</Heading>

Incidence structures can be more general than incidence geometries, e.g. if they do not satisfy 
axiom (ii). We allow the construction of such objects. This explains one of the top level categories in 
<Package>FinInG</Package>

<ManSection>
<Filt Name="IsIncidenceStructure" Type="Category"/>
<Description>
Top level category for all objects representing an incidence structure.
<F>IsIncidenceStructure</F>. 
</Description>
</ManSection>

In the following example we define an incidence structure that is not an incidence geometry. The
example used is the incidence structure with elements the subspaces contained in the line Grassmannian
of PG(4,2). This example is not meant to create this incidence structure in an efficient way, but just
to demonstrate the general philiosophy.

<ManSection>
<Oper Name="IncidenceStructure" Arg="eles, inc_rel, type, typeset"/>
<Returns>an incidence structure</Returns>
<Description>
<A>eles</A> is a set containing the elements of the incidence structure. <A>inc_rel</A>
must be a function that determines if two objects in the set <A>eles</A> are incident. 
<A>type</A> is a function mapping any element to its type, which is a unique element 
in the set <A>typeset</A>.<Example>
<#Include SYSTEM "../examples/include/incgeom_incstruct.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Filt Name="IsIncidenceGeometry" Type="Category"/>
<Description>
Category for all objects representing an incidence geometry.
</Description>
</ManSection>

Lie Geometries, i.e. geometries with a projective space as ambient geometry, affine spaces and 
generalised polygons have their category, as a subcategory of <C>IsIncidenceGeometry</C>.
<ManSection>
<Heading>Main categories in <C>IsIncidenceGeometry</C></Heading>
<Filt Name="IsLieGeometry" Type="Category"/>
<Filt Name="IsAffineSpace" Type="Category"/>
<Filt Name="IsGeneralisedPolygon" Type="Category"/>
</ManSection>

<ManSection>
<Heading>Main categories in <C>IsLieGeometry</C></Heading>
<Filt Name="IsProjectiveSpace" Type="Category"/>
<Filt Name="IsClassicalPolarSpace" Type="Category"/>
<Description>
Lie geometries bundle projective spaces and classical polar spaces. I would like to shortly explain the mathematical reason for this.
Both classes of geometries have their category, as a subcategory of <C>IsLieGeometry</C>.
</Description>
</ManSection>


The following categories for geometries are not considered as main categories.
<ManSection>
<Heading>Categories in <C>IsGeneralisedPolygon</C></Heading>
<Filt Name="IsGeneralisedQuadrangle" Type="Category"/>
<Filt Name="IsGeneralisedHexagon" Type="Category"/>
<Filt Name="IsGeneralisedOctogon" Type="Category"/>
<Description>
Within <C>IsGeneralisedPolygon</C>, categories are declared for generalised quadrangles,
generalised hexagons, and generalised octogons.
</Description>
</ManSection>

<ManSection>
<Filt Name="IsElationGQ" Type="Category"/>
<Description>
Within <C>IsGeneralisedQuadrangle</C>, this category is declared to construct 
elation generalised quadrangles.
</Description>
</ManSection>

<ManSection>
<Filt Name="IsClassicalGQ" Type="Category"/>
<Description>
This category lies in <C>IsElationGQ</C> and <C>IsClassicalPolarSpace</C>.
</Description>
</ManSection>

<ManSection>
<Heading>Examples of categories of incidence geometries</Heading>
<Description>
<Example>
<#Include SYSTEM "../examples/include/incgeom_categories1.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Attr Name="TypesOfElementsOfIncidenceStructure" Arg="inc"/>
<Attr Name="TypesOfElementsOfIncidenceStructurePlural" Arg="inc"/>
<Returns>a list of strings</Returns>
<Description>
Both attributes are declared for objects in the category <C>IsIncidenceStructure</C>, but 
only methods are installed for the geometries that are built in <Package>FinInG</Package>.
Any incidence structure contains elements of a set of types. If names are 
given to an element of each type, this attribute returns the names for the
particular incidence structure <A>inc</A>. The second variant returs the list of 
plurals of these names.
<Example>
<#Include SYSTEM "../examples/include/incgeom_typesofels.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="Rank" Arg="inc"/>
<Attr Name="RankAttr" Arg="inc"/>
<Returns>rank of <A>inc</A>, an object which must belong to the categorie <C>IsIncidenceStructure</C></Returns>
<Description>
The operation <F>Rank</F> returns the rank of the incidence structure <C>inc</C>. The highest level method for
<F>Rank</F>, applicable to objects in <C>IsIncidenceStructure</C> simply refers to the attribute <F>RankAttr</F>.
In <Package>FinInG</Package>, the rank of an incidence structure is determined upon creation, when also <F>RankAttr</F>
is set.
<Example>
<#Include SYSTEM "../examples/include/incgeom_rank.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Attr Name="AmbientGeometry" Arg="inc"/>
<Returns>the ambient geometry of the incidence structure<A>inc</A></Returns>
<Description>
This attribute is declared for objects in the category <C>IsIncidenceStructure</C>, but as this might be meaningless 
for general incidence structures, in which case a no method found error is returned.
<Example>
check and give interesting examples.
</Example>
</Description>
</ManSection>

<ManSection>
<Attr Name="AmbientSpace" Arg="ig"/>
<Returns>the ambient projective space of a Lie geometry <A>ig</A></Returns>
<Description>
<Example>
<#Include SYSTEM "../examples/include/incgeom_ambientspace.include"> 
</Example>
</Description>
</ManSection>

</Section>

<Section>
<Heading>Elements of incidence structures</Heading>

<ManSection>
<Heading>Main categories for individual elements of incidence structures</Heading>
<Filt Name="IsElementOfIncidenceStructure" Type="Category"/>
<Filt Name="IsElementOfIncidenceGeometry" Type="Category"/>
<Filt Name="IsElementOfLieGeometry" Type="Category"/>
<Filt Name="IsElementOfAffineSpace" Type="Category"/>
<Filt Name="IsSubspaceOfProjectiveSpace" Type="Category"/>
<Filt Name="IsSubspaceOfClassicalPolarSpace" Type="Category"/>
<Description>
A category <C>IsElementOfIncStr</C> for the individual elements of an incidence structure in the category <C>IsIncStr</C>, except for 
projective spaces and classical polar spaces. The inclusion for different categories of geometries is followed for their elements,
with an exception for <C>IsSubspaceOfClassicalPolarSpace</C>, which is a subcategory of <C>IsSubspaceOfProjectiveSpace</C>, 
while <C>IsClassicalPolarSpace</C> is not a subcategory of <C>IsProjectiveSpace</C>. 
<Example>
<#Include SYSTEM "../examples/include/incgeom_categories2.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Heading>Main categories for collections of elements of incidence structures</Heading>
<Filt Name="IsElementsOfIncidenceStructure" Type="Category"/>
<Filt Name="IsElementsOfIncidenceGeometry" Type="Category"/>
<Filt Name="IsElementsOfLieGeometry" Type="Category"/>
<Filt Name="IsElemenstOfAffineSpace" Type="Category"/>
<Filt Name="IsSubspacesOfProjectiveSpace" Type="Category"/>
<Filt Name="IsSubspacesOfClassicalPolarSpace" Type="Category"/>
<Description>
A category <C>IsElementsOfIncStr</C> for objects representing a set of elements of an incidence structure in 
the category <C>IsIncStr</C>, is declared, with an exception for projective spaces and polar spaces. The inclusion for 
different categories of geometries is followed for their collection of elements,
except for <C>IsSubspaceOfClassicalPolarSpace</C>, which is a subcategory of <C>IsSubspaceOfProjectiveSpace</C>, 
while <C>IsClassicalPolarSpace</C> is not a subcategory of <C>IsProjectiveSpace</C>. 
</Description>
</ManSection>

The object representing the set of elements of a given type can be computed using 
the general operation <F>ElementsOfIncidenceStructure</F>, of course assuming that
a method is installed for the particular incidence structure.

<ManSection>
<Oper Name="ElementsOfIncidenceStructure" Arg="inc"/>
<Oper Name="ElementsOfIncidenceStructure" Arg="inc, j"/>
<Oper Name="ElementsOfIncidenceStructure" Arg="inc, str"/>
<Returns>a list of elements</Returns>
<Description><A>inc</A> must be an incidence structure, <A>j</A> must be
a type of element of <A>inc</A>. This function returns all elements
of <A>inc</A> of type <A>j</A>, and an error is displayed if <A>inc</A> has no 
elements of type <A>j</A>. Calling the elements (of a given type) of <A>inc</A>
yields an object in the category <C>IsElementsOfIncStr</C> (or the appropriate category
for projective spaces and classical polar spaces), which does not imply that
all elements are computed and stored. In an alternative form of this function
<A>str</A> can be one of ``points", ``lines", ``planes" or ``solids" and the
function returns the elements of type 1, 2, 3 or 4 respectively, of course
if <A>inc</A> has elements of the deduced type. When no type is
specified all elements of <A>inc</A> are returned.
<Example>
<#Include SYSTEM "../examples/include/incgeom_elementsj.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Heading>Short names for ElementsOfIncidenceStructure</Heading>
<Oper Name="Points" Arg="inc"/>
<Oper Name="Lines" Arg="inc"/>
<Oper Name="Planes" Arg="inc"/>
<Oper Name="Solids" Arg="inc"/>
<Returns>The elements of <A>inc</A> of respective type 1,2,3, and 4.</Returns>
<Description>
It is possible that <A>inc</A> is an incidence structure where the elements of type 1,2,3, and 4 
respectively are not called "points", "lines", "planes", and "solids" respectively. The methods don't
check if names are given, and are just shortcuts to the operation <F>ElementsOfIncidenceStructure</F>.
<Example>
<#Include SYSTEM "../examples/include/incgeom_short.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="Hyperplanes" Arg="ps"/>
<Returns>a list of hyerplanes</Returns>
<Description>This function returns a list of all elements
of <A>ps</A> of the maximum type.
<A>ps</A> must be an incidence geometry, but
only methods for projective and affine spaces are installed, since
a ``hyperplane'' has either no, either a completely different meaning
in other geometires than projective and affine spaces.
 This operation is
perhaps more synonomous and better suited when using projective
and affine spaces, however one can also use it for
an arbitrary incidence geometry. 
<Example>
<#Include SYSTEM "../examples/include/incgeom_hyperplanes.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="IsIncident" Arg="u,v"/>
<Returns>true or false</Returns>
<Description>
<A>u</A> and <A>v</A> must be elements of an incidence structure.
This function returns true if and only if <A>u</A> is incidence with <A>v</A>. Recall that 
incidence is a symmetric relation.
<Example>
<#Include SYSTEM "../examples/include/incgeom_isincident.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="Random" Arg="C"/>
<Returns>an element in the collection <A>C</A></Returns>
<Description>
<A>C</A> is a collection of elements of an incidence structure, i.e. an object in the
category <C>IsElementsOfIncidenceStructure</C>. <F>Random(C)</F> will return a random element
in <A>C</A> provided there is a method installed.
<Example>
<#Include SYSTEM "../examples/include/incgeom_random.include"> 
</Example>
</Description>
</ManSection>

</Section>

<Section>
<Heading>Shadows of elements</Heading>

<ManSection>
<Oper Name="ShadowOfElement" Arg="geom, v, j"/>
<Returns> a collection of elements </Returns>
<Description>
<A>geom</A> is an incidence geometry. <A>v</A> must be an element of <A>geom</A>. This function returns a list of all elements of 
<A>geom</A> of type <A>j</A> which are incident with <A>v</A>.
This operation may not be installed for all incidence geometries.
In some case, such as when we are working with objects of
projective or polar spaces, we can just type <C>Points(v)</C> for the
set of points of the ambient geometry incident with <A>v</A>. We
can perform a similar operation with <C>Lines</C>, <C>Planes</C> and
<C>Solids</C>.
<Example>
<#Include SYSTEM "../examples/include/incgeom_shadowofelement.include"> 
</Example>
</Description>
</ManSection>

</Section>

<Section>
<Heading>Enumerating elements of an incidence structure</Heading>
In several situations, it can be usful to compute a complete list of objects statisfying one or more conditions.
To list all elements of a given type of an incidence structure, is a typical example. <Package>FinInG</Package> 
provides functionality that is common in GAP for this purpose. 

For collections of elements, <Package>FinInG</Package> provides methods to compute iterators. An iterator is a GAP object
that gives a user friendly way to loop over all elements without repetition. Only three operations are applicable on an iterator:
<F>NextIterator</F>, <F>IsDoneIterator</F>, and <F>ShallowCopy</F>.

<ManSection>
<Oper Name="Iterator" Arg="C"/>
<Returns> an iterator for the collection <A>C</A></Returns>
<Description>
<A>C</A> is a collection of elements of an incidence structure. An iterator is returned.
<Example>
<#Include SYSTEM "../examples/include/incgeom_iterator.include"> 
</Example>
</Description>
</ManSection>
More to be written on the concept enumerator (seems not to be the same for all incidence geometries).

</Section>
</Chapter>
