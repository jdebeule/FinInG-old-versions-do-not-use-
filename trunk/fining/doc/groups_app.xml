<!-- 

  groups_app.xml    FinInG package documentation
                                                                   John Bamberg
                                                                   Anton Betten
                                                                   Jan De Beule
                                                                  Philippe Cara
                                                                 Michel Lavrauw
                                                                  and Maska Law
                                                             and Michael Pauley
                                                            and Max Neunhoeffer
                                                              and Sven Reichard

  Copyright (C) 2009, University of Western Australia
                      Colorado State University
                      Lehrstuhl D fuer Mathematik
                      Ghent University
                      Vrije Universiteit Brussel

This appendix gives more (technical) information on the construction of finite classical groups.

-->
<Appendix Label="groups_app">
<Heading>The finite classical groups in <Package>FinInG</Package> </Heading>

<Section Label="groups_app_forms">
<Heading>Canonical forms used to produce the finite classical groups.</Heading>

<ManSection>
<Oper Name="CanonicalGramMatrix" Arg="type, d, f"/>
<Returns>a gram matrix usable as input to construct a sesquilinear form</Returns>
<Description>
The arguments <A>d</A> and <A>f</A> are the vector dimension and the fininte field
respectively. The argument <A>type</A> is eiter "symplectic", "hermitian",
"hyperbolic", "elliptic" or "parabolic". <P/>
If <A>type</A> equals "symplectic", the gram matrix is
<Alt Only="LaTeX"><Display>\left( \begin{array}{ccccccc}
0 &amp; 1 &amp; 0 &amp; 0 &amp; \ldots &amp; 0 &amp; 0 \\ 
-1 &amp; 0 &amp; 0 &amp; 0 &amp; \ldots &amp; 0 &amp; 0 \\
0 &amp; 0 &amp; 0 &amp; 1 &amp; \ldots &amp; 0 &amp; 0 \\
0 &amp; 0 &amp; -1 &amp; 0 &amp; \ldots &amp; 0 &amp; 0 \\
\vdots &amp; \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots &amp; \vdots \\
0 &amp; 0 &amp; 0 &amp; 0 &amp; \ldots &amp; 0 &amp; 1 \\
0 &amp; 0 &amp; 0 &amp; 0 &amp; \ldots &amp; -1 &amp; 0 \\
\end{array} \right).</Display>
</Alt>
<Alt Only="HTML">
&lt;!-- matrix expression begin -->
&lt;table style="color:#000">&lt;tr>
&lt;td>&lt;table border=0 cellpadding=0 cellspacing=0px style="border-left:1px solid #000; border-right:1px solid #000; color:#000">&lt;tr>
&lt;td style ="border-top:1px solid #000; border-bottom:1px solid #000;">&nbsp;&lt;/td>&lt;td>&lt;table border=0 cellpadding=0 cellspacing=0 style="color:#000;">
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>1&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>-1&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>1&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>-1&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>&lt;sup>&lt;big>&#183;&lt;/big>&lt;/sup>&#183;&lt;sub>&lt;big>&#183;&lt;/big>&lt;/sub>&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>-1&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;/table>&lt;/td>&lt;td style ="border-top:1px solid #000; border-bottom:1px solid #000;">&nbsp;&lt;/td>&lt;/tr>&lt;/table>&lt;/td>
&lt;/tr>&lt;/table>
<!-- matrix expression end -->
</Alt><P/>
If <A>type</A> equals "hermitian", the gram matrix is the identity matrix of dimension <A>d</A> over the field <M>f=GF(q)</M><P/>
If <A>type</A> equals "hyperbolic", the gram matrix is
<Alt Only="LaTeX"><Display>\left( \begin{array}{ccccccc}
0 &amp; a &amp; 0 &amp; 0 &amp; \ldots &amp; 0 &amp; 0 \\ 
a &amp; 0 &amp; 0 &amp; 0 &amp; \ldots &amp; 0 &amp; 0 \\
0 &amp; 0 &amp; 0 &amp; a &amp; \ldots &amp; 0 &amp; 0 \\
0 &amp; 0 &amp; a &amp; 0 &amp; \ldots &amp; 0 &amp; 0 \\
\vdots &amp; \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots &amp; \vdots \\
0 &amp; 0 &amp; 0 &amp; 0 &amp; \ldots &amp; 0 &amp; a \\
0 &amp; 0 &amp; 0 &amp; 0 &amp; \ldots &amp; a &amp; 0 \\
\end{array} \right).</Display>
</Alt>
<Alt Only="HTML">
&lt;!-- matrix expression begin -->
&lt;table style="color:#000">&lt;tr>
&lt;td>&lt;table border=0 cellpadding=0 cellspacing=0px style="border-left:1px solid #000; border-right:1px solid #000; color:#000">&lt;tr>
&lt;td style ="border-top:1px solid #000; border-bottom:1px solid #000;">&nbsp;&lt;/td>&lt;td>&lt;table border=0 cellpadding=0 cellspacing=0 style="color:#000;">
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>a&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>a&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>a&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>a&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>&lt;sup>&lt;big>&#183;&lt;/big>&lt;/sup>&#183;&lt;sub>&lt;big>&#183;&lt;/big>&lt;/sub>&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>a&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>a&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;/table>&lt;/td>&lt;td style ="border-top:1px solid #000; border-bottom:1px solid #000;">&nbsp;&lt;/td>&lt;/tr>&lt;/table>&lt;/td>
&lt;/tr>&lt;/table>
<!-- matrix expression end -->
</Alt>
with
<Alt Only="HTML">a=(p+1)/2 if p+1 = 0 mod 4, q=p&lt;sup>h&lt;/sup></Alt><Alt Only="LaTeX"><M>a=\frac{p+1}{2}</M> if <M>p+1 \equiv 0\,\, \mathrm{mod}\,\, 4, q=p^h</M></Alt>
and <M>a=1</M> otherwise.
<P/>
If <A>type</A> equals "ellipic", the gram matrix is
<Alt Only="LaTeX"><Display>\left( \begin{array}{ccccccc}
1 &amp; 0 &amp; 0 &amp; 0 &amp; \ldots &amp; 0 &amp; 0 \\ 
0 &amp; t &amp; 0 &amp; 0 &amp; \ldots &amp; 0 &amp; 0 \\
0 &amp; 0 &amp; 0 &amp; a &amp; \ldots &amp; 0 &amp; 0 \\
0 &amp; 0 &amp; a &amp; 0 &amp; \ldots &amp; 0 &amp; 0 \\
\vdots &amp; \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots &amp; \vdots \\
0 &amp; 0 &amp; 0 &amp; 0 &amp; \ldots &amp; 0 &amp; a \\
0 &amp; 0 &amp; 0 &amp; 0 &amp; \ldots &amp; a &amp; 0 \\
\end{array} \right).</Display>
</Alt>
<Alt Only="HTML">
&lt;!-- matrix expression begin -->
&lt;table style="color:#000">&lt;tr>
&lt;td>&lt;table border=0 cellpadding=0 cellspacing=0px style="border-left:1px solid #000; border-right:1px solid #000; color:#000">&lt;tr>
&lt;td style ="border-top:1px solid #000; border-bottom:1px solid #000;">&nbsp;&lt;/td>&lt;td>&lt;table border=0 cellpadding=0 cellspacing=0 style="color:#000;">
&lt;tr>
&lt;td align="center" valign="center" width=30>1&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>t&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>a&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>a&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>&lt;sup>&lt;big>&#183;&lt;/big>&lt;/sup>&#183;&lt;sub>&lt;big>&#183;&lt;/big>&lt;/sub>&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>a&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>a&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;/table>&lt;/td>&lt;td style ="border-top:1px solid #000; border-bottom:1px solid #000;">&nbsp;&lt;/td>&lt;/tr>&lt;/table>&lt;/td>
&lt;/tr>&lt;/table>
<!-- matrix expression end -->
</Alt>
with
<M>t</M> the primitive root of <M>GF(q)</M> if <Alt Only="HTML">q = 1 mod 4 or q = 2 mod 4</Alt>
<Alt Not="HTML"><M>q \equiv 1 \,\, \mathrm{mod}\,\, 4</M> or <M>q \equiv 2 \,\, \mathrm{mod}\,\, 4</M></Alt>, and <M>t=1</M> otherwise;  
and <Alt Only="HTML">a=(p+1)/2 if p+1 = 0 mod 4, q=p&lt;sup>h&lt;/sup></Alt><Alt Not="HTML"><M>a=\frac{p+1}{2}</M> if <M>p+1 \equiv 0\,\, \mathrm{mod}\,\, 4, q=p^h</M></Alt>
and <M>a=1</M> otherwise.
<P/>
If <A>type</A> equals "parabolic", the gram matrix is
<Alt Only="LaTeX"><Display>\left( \begin{array}{cccccc}
t &amp; 0 &amp; 0 &amp;  \ldots &amp; 0 &amp; 0 \\ 
0 &amp; 0 &amp; a &amp;  \ldots &amp; 0 &amp; 0 \\
0 &amp; a &amp; 0 &amp;  \ldots &amp; 0 &amp; 0 \\
\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots &amp; \vdots \\
0 &amp; 0 &amp; 0 &amp; \ldots &amp; 0 &amp; a \\
0 &amp; 0 &amp; 0 &amp; \ldots &amp; a &amp; 0 \\
\end{array} \right).</Display>
</Alt>
<Alt Only="HTML">
&lt;!-- matrix expression begin -->
&lt;table style="color:#000">&lt;tr>
&lt;td>&lt;table border=0 cellpadding=0 cellspacing=0px style="border-left:1px solid #000; border-right:1px solid #000; color:#000">&lt;tr>
&lt;td style ="border-top:1px solid #000; border-bottom:1px solid #000;">&nbsp;&lt;/td>&lt;td>&lt;table border=0 cellpadding=0 cellspacing=0 style="color:#000;">
&lt;tr>
&lt;td align="center" valign="center" width=30>t&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>a&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>a&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>&lt;sup>&lt;big>&#183;&lt;/big>&lt;/sup>&#183;&lt;sub>&lt;big>&#183;&lt;/big>&lt;/sub>&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;td align="center" valign="center" width=30>:&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>a&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>...&lt;/td>
&lt;td align="center" valign="center" width=30>a&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;/table>&lt;/td>&lt;td style ="border-top:1px solid #000; border-bottom:1px solid #000;">&nbsp;&lt;/td>&lt;/tr>&lt;/table>&lt;/td>
&lt;/tr>&lt;/table>
<!-- matrix expression end -->
</Alt>
with
<M>t</M> the primitive root of <M>GF(p)</M> and <Alt Only="HTML">a=t(p+1)/2</Alt><Alt Not="HTML"><M>a=t\frac{p+1}{2}</M></Alt>
if <Alt Only="HTML">q = 5 mod 8 or q = 7 mod 8</Alt>
<Alt Not="HTML"><M>q \equiv 5 \,\, \mathrm{mod}\,\, 8</M> or <M>q \equiv 7 \,\, \mathrm{mod}\,\, 8</M></Alt>, and <M>t=a=1</M> otherwise. 
<P/>
There is no error message when asking for a hyperbolic, elliptic or parabolic type if the characteristic of the field <M>f</M> is even. In
such a case, a matrix is returned, which is of course not suitable to create a bilinear form that corresponds with an orthogonal polar space.
For this reason, <F>CanonicalGramMatrix</F> is not a operation designed for the user.
</Description>
</ManSection>

<ManSection>
<Oper Name="CanonicalQuadraticForm" Arg="type, d, f"/>
<Returns>a gram matrix usable as input to construct a quadratic form</Returns>
<Description>
The arguments <A>d</A> and <A>f</A> are the vector dimension and the fininte field
respectively. The argument <A>type</A> is eiter "hyperbolic", "elliptic" or "parabolic". 
The matrix returned can be used to construct a quadratic form.
<P/>
If <A>type</A> equals "hyperbolic", the gram matrix returned will result in the quadratic form
<Alt Only="HTML">x&lt;sub>1&lt;/sub>x&lt;sub>2&lt;/sub>+...+ x&lt;sub>d-1&lt;/sub>x&lt;sub>d&lt;/sub></Alt>
<Alt Not="HTML"><M>x_1x_2+ x_3x_4+\ldots+ x_{d-1}x_d</M></Alt><P/>
If <A>type</A> equals "elliptic", the gram matrix returned will result in the quadratic form
<Alt Only="HTML">x&lt;sub>1&lt;/sub>&lt;sup>2&lt;/sup>+x&lt;sub>1&lt;/sub>x&lt;sub>2&lt;/sub>+&#957;x&lt;sub>2&lt;/sub>&lt;sup>2&lt;/sup>
...+ x&lt;sub>d-1&lt;/sub>x&lt;sub>d&lt;/sub></Alt><Alt Not="HTML"><M>x_1^2+x_1x_2+\nu x_2^2 + x_3x_4+\ldots+ x_{d-1}x_d</M></Alt>with 
<Alt Only="HTML">&#957;=&#945;&lt;sup>i&lt;/sup></Alt><Alt Not="HTML"><M>\nu=\alpha^i</M></Alt>, with <Alt Only="HTML">&#945;</Alt>
<Alt Not="HTML">\alpha</Alt> the primitive element of the multiplicative group of <M>GF(q)</M>, which is in GAP <F>Z(q)</F>, and <M>i</M>
the first number in <M>[0,1,...,q-2]</M> for which <Alt Only="HTML">x&lt;sup>2&lt;/sup>+x+&#957;</Alt><Alt Not="HTML"><M>x^2+x+\nu</M>
</Alt> is irreducible over <M>GF(q)</M>.
<P/>
If <A>type</A> equals "parabolic", the gram matrix returned will result in the quadratic form
<Alt Only="HTML">x&lt;sub>1&lt;/sub>&lt;sup>2&lt;/sup>+x&lt;sub>2&lt;/sub>x&lt;sub>3&lt;/sub>+...
+ x&lt;sub>d-1&lt;/sub>x&lt;sub>d&lt;/sub></Alt><Alt Not="HTML"><M>x_1^2+x_2x_3 + \ldots x_{d-1}x_d</M></Alt><P/>
This function is intended to be used only when the characteristic of <A>f</A> is two, but there is no error message is this is not the case.
For this reason, <F>CanonicalQuadraticForm</F> is not an operation designed for the user.
</Description>
</ManSection>

</Section>

<Section Label="groups_app_forms">
<Heading>Direct commands to construct the projective classical groups in <Package>FinInG</Package></Heading>

As explained in Chapter <Ref Chap="classicalpolarspaces"/>, Section <Ref Sect="polar:classicalgroups"/>, we have assumed that
the user asks for the projective classical groups in an indirect way, i.e. as a (subgroup) of the collineation group of 
a classical polar space. However, shortcuts to these groups exist. More information on the notations can be found in
Section <Ref Sect="polar:classicalgroups"/>.

<ManSection>
<Oper Name="SOdesargues" Arg="e, d, f"/>
<Returns>the special isometry group of a canonical orthogonal polar space</Returns>
<Description>
The argument <A>e</A> determines the type of the othogonal polar space, i.e. -1,0,1 for
an elliptic, hyperbolic, parabolic orthogonal space, respectively. The argument <A>d</A> is
the dimension of the underlying vector space, <A>f</A> is the finite field. The method relies
on <F>SO</F>, a GAP command returning the appropriate matrix group. Internally, the invariant form
is asked, and the base chage to our canonical form is obtained using the package <Package>form</Package>
<Example>
<#Include SYSTEM "../examples/include/groups_app_sodesargues.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="GOdesargues" Arg="e, d, f"/>
<Returns>the isometry group of a canonical orthogonal polar space</Returns>
<Description>
The argument <A>e</A> determines the type of the othogonal polar space, i.e. -1,0,1 for
an elliptic, hyperbolic, parabolic orthogonal space, respectively. The argument <A>d</A> is
the dimension of the underlying vector space, <A>f</A> is the finite field. The method relies
on <F>GO</F>, a GAP command returning the appropriate matrix group. Internally, the invariant form
is asked, and the base chage to our canonical form is obtained using the package <Package>form</Package>
<Example>
<#Include SYSTEM "../examples/include/groups_app_godesargues.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="SUdesargues" Arg="d, f"/>
<Returns>the special isometry group of a canonical hermitian polar space</Returns>
<Description>
The argument <A>d</A> is the dimension of the underlying vector space, <A>f</A> is the finite field. 
The method relies on <F>SU</F>, a GAP command returning the appropriate matrix group. Internally, the invariant form
is asked, and the base chage to our canonical form is obtained using the package <Package>form</Package>
<Example>
<#Include SYSTEM "../examples/include/groups_app_sudesargues.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="GUdesargues" Arg="d, f"/>
<Returns>the isometry/similarity group of a canonical hermitian polar space</Returns>
<Description>
The argument <A>d</A> is the dimension of the underlying vector space, <A>f</A> is the finite field. 
The method relies on <F>GU</F>, a GAP command returning the appropriate matrix group. Internally, the invariant form
is asked, and the base chage to our canonical form is obtained using the package <Package>form</Package>
<Example>
<#Include SYSTEM "../examples/include/groups_app_gudesargues.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="Spdesargues" Arg="d, f"/>
<Returns>the (special) isometry group of a canonical symplectic polar space</Returns>
<Description>
The argument <A>d</A> is the dimension of the underlying vector space, <A>f</A> is the finite field. 
The method relies on <F>Sp</F>, a GAP command returning the appropriate matrix group. Internally, the invariant form
is asked, and the base chage to our canonical form is obtained using the package <Package>form</Package>
<Example>
<#Include SYSTEM "../examples/include/groups_app_spdesargues.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="GeneralSymplecticGroup" Arg="d, f"/>
<Returns>the isometry group of a canonical symplectic form</Returns>
<Description>
The argument <A>d</A> is the dimension of the underlying vector space, <A>f</A> is the finite field. Internally, the invariant form
is asked, and the base chage to our canonical form is obtained using the package <Package>form</Package>
<Example>
<#Include SYSTEM "../examples/include/groups_app_generalsymplectic.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="GSpdesargues" Arg="d, f"/>
<Returns>the similarity group of a canonical symplectic polar space</Returns>
<Description>
The argument <A>d</A> is the dimension of the underlying vector space, <A>f</A> is the finite field. 
The method relies on <F>Sp</F>, a GAP command returning the appropriate matrix group. Internally, the invariant form
is asked, and the base chage to our canonical form is obtained using the package <Package>form</Package>
<Example>
<#Include SYSTEM "../examples/include/groups_app_gspdesargues.include"> 
</Example>
</Description>
</ManSection>


</Section>
</Appendix>

