<!-- 

  Projective_and_polar.xml    FinInG package documentation
                                                                   John Bamberg
                                                               and Jan De Beule
                                                                  and Maska Law
                                                             and Michael Pauley
                                                            and Max Neunhoeffer
                                                              and Sven Reichard

  Copyright (C) 2009, University of Western Australia
                      Lehrstuhl D fuer Mathematik
                      Ghent University

This is the chapter of the documentation describing the 
projective and polar spaces.

-->

<Chapter Label="projectivepolar">
<Heading>Projective Spaces</Heading>

In this chapter we describe how to use <Package>FinInG</Package> to work 
with finite projective and polar spaces. 

<Section>
<Heading>Creating Projective Spaces and basic operations</Heading>

A <E>projective space</E> is a point-line
incidence geometry, satisfying few well known axioms. In
<Package>FinInG</Package>, we deal with finite Desarguesion projective
spaces. It is well known that these geometries can be described completely using
vector spaces over finite fields. Hence, the underlying vector space and matrix
group are to our advantage. We refer the reader to
<Cite Key="HirschfeldThas"/> for the necessary background theory (if it is not
otherwise provided).<P/> 

<ManSection>
<Oper Name="ProjectiveSpace" Arg="d, F"/>
<Oper Name="ProjectiveSpace" Arg="d, q"/>    
<Oper Name="PG" Arg="d, q"/>    

<Returns>a projective space</Returns>
<Description><A>d</A> must be a positive integer. 
In the first form, <A>F</A> is a field and the function returns the projective
space of dimension <A>d</A> over <A>F</A>. In the second form, <A>q</A> is
a prime power specifying the size of the field. The user may also use an alias,
namely, the common abbreviation <C>PG(d, q)</C>.
<Example>
<#Include SYSTEM "../examples/include/projpol_projectivespace.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="ProjectiveDimension" Arg="ps"/>
<Oper Name="Dimension" Arg="ps"/>
<Oper Name="Rank" Arg="ps"/>
<Returns>the projective dimension of the projective space <A>ps</A></Returns>
<Description>
<Example>
<#Include SYSTEM "../examples/include/projpol_projdimension.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="BaseField" Arg="ps"/>
<Returns>returns the base field for the projective space<A>ps</A>
</Returns>
<Description>
<Example>
<#Include SYSTEM "../examples/include/projpol_basefieldps.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="UnderlyingVectorSpace" Arg="ps"/>

<Returns>a vector space</Returns>
<Description>If <A>ps</A> is a projective space of dimension <M>n</M> over the field of order
<M>q</M>, then this operation simply returns the underlying vector space, i.e. the <M>n+1</M> dimensional
vector space over the field of order <M>q</M>.
<Example>
<#Include SYSTEM "../examples/include/projpol_underlyingvs.include"> 
</Example>
</Description>
</ManSection>

</Section>

<Section>
<Heading>Subspaces of projective spaces</Heading>

The elements of a projective space <M>PG(n,q)</M> are the subspaces of a suitable dimension. The 
empty subspace, also called the trivial subspace, has dimenion -1, corresponds with the zero dimensional 
vector space of the underlying vector space of <M>PG(n,q)</M>, and is hence represented by the zero vector
of lenght <M>n+1</M> over the underlying field <M>GF(q)</M>. The trivial subspace and the whole projective 
space are mathematically considerd as a subsace of the projective geometry, but not as elements of the 
incidence geometry, and hence do in <Package>FinInG</Package>
not belong to the category <C>IsSubspaceOfProjectiveSpace</C>.

<ManSection>
<Oper Name="VectorSpaceToElement" Arg="geo, v"/>
<Returns>an element</Returns>
<Description>
<A>geo</A> is a projective space, and <A>v</A> is either a row vector (for points) or an <M>m x
n</M> matrix (for an <M>(m-1)</M>-subspace of projective space of dimension <M>n-1</M>).
In the case that <A>v</A> is a matrix, the rows represent basis vectors for the subspace. An
exceptional case is when <A>v</A> is a zero-vector, whereby the trivial subspace is
returned.
<Example>
<#Include SYSTEM "../examples/include/projpol_element1.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name = "EmptySubspace" Arg="ps"/>
<Returns>the trivial subspace in the projective <A>ps></A></Returns>
<Description>
The object returned by this operation is contained in
every projective subspace of the projective space <A>ps</A>
<Example>
<#Include SYSTEM "../examples/include/projpol_emptysubspace.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="ProjectiveDimension" Arg="sub"/>
<Oper Name="Dimension" Arg="sub"/>
<Returns>the projective dimension of a subspace of a projective space. This operation is also applicable on the EmptySubspace
</Returns>
<Description>
<Example>
<#Include SYSTEM "../examples/include/projpol_projdimension_element.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="ElmentsOfIncidenceStructure" Arg="ps, j"/>
<Returns>the collection of elements of the projective space <A>ps</A> of type <A>j</A></Returns>
<Description>
For the projective space <A>ps</A> of dimension <M>d</M> and the type <A>j</A>, <M>1 lt j lt d</M>
this operation returns the collection of <M>j-1</M> dimenaional subspaces.  <Example>
<#Include SYSTEM "../examples/include/projpol_element1.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="StandardFrame" Arg="ps"/>
<Returns>returns the standard frame in the projective space <A>ps</A></Returns>
<Description>
<Example>
<#Include SYSTEM "../examples/include/projpol_standardframe.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="Coordinates" Arg="p"/>
<Returns>the coordinates of the projective point <A>p</A>
</Returns>
<Description>
<Example>
<#Include SYSTEM "../examples/include/projpol_coordinates.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="EquationOfHyperplane" Arg="h"/>
<Returns>the equation of the hyperplane <A>h</A> of a projective space</Returns>
<Description>
<Example>
<#Include SYSTEM "../examples/include/projpol_eqhyperplane.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="AmbientSpace" Arg="el"/>
<Returns>returns the ambient space an element <A>el</A> of a projective space</Returns>
<Description>
This operation is also applicable on the trivial subspace.
<Example>
<#Include SYSTEM "../examples/include/projpol_ambientspaceelps.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="BaseField" Arg="el"/>
<Returns>returns the base field of an element <A>el</A> of a projective space</Returns>
<Description>
This operation is also applicable on the trivial subspace.
<Example>
<#Include SYSTEM "../examples/include/projpol_basefieldelps.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="AsList" Arg="subspaces"/>
<Returns>an Orb object or list</Returns>
<Description>
<Example>
John's example works, but it is not clear whether it fits in this part of the manual. I'll ask John to explain
the difference between using orb and not using orb to list e.g. all lines of PG(3,4), is in the example projpol_Aslist.g
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="Random" Arg="elements"/>
<Returns>a random element from the collection <A>elements</A></Returns>
<Description>
The collection <A>elements</A> is an object in the category <C>IsElementsOfIncidenceStructure</C>,
i.e. an object representing the set of elements of a certain incidence structure of a given type. The 
latter information can be derived e.g. using <C>AmbientSpace</C> and <C>Type</C>.
<Example>
<#Include SYSTEM "../examples/include/projpol_randomeltps.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="RandomSubspace" Arg="ps, i"/>
<Oper Name="RandomSubspace" Arg="ps"/>
<Returns>the first variant returns a random element of type <A>i</A> of the projective space <A>ps</A>.
The second variant returns a random element of a random type of the projective space <A>ps</A>
</Returns>
<Description>
<Example>
<#Include SYSTEM "../examples/include/projpol_randomeltsps.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="Span" Arg="u,v"/>
<Oper Name="Span" Arg="list"/>
<Returns> an element </Returns>
<Description>
When <A>u</A> and <A>v</A> are elements of a projective or polar space.
This function returns the span of the two elements. When <A>list</A> is 
a list of elements of the same projective space, then this function returns
the span of all elements in <A>list</A>. It is checked whether the elements 
<A>u</A> and <A>v</A> are elements of the same projective space. Although 
the trivial subspace and the whole projective space are not objects in
the category <C>IsSubspaceOfProjectiveSpace</C>, they are allowed as 
argument for this operation, also as member of the argument of the second
variant of this operation.
<Example>
<#Include SYSTEM "../examples/include/projpol_span.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="Meet" Arg="u,v"/>
<Returns>an element</Returns>
<Description>
When <A>u</A> and <A>v</A> are elements of a projective or polar space.
This function returns the intersection of the two elements. When <A>list</A> is 
a list of elements of the same projective space, then this function returns
the intersection of all elements in <A>list</A>. It is checked whether the elements 
<A>u</A> and <A>v</A> are elements of the same projective space. Although 
the trivial subspace and the whole projective space are not objects in
the category <C>IsSubspaceOfProjectiveSpace</C>, they are allowed as 
argument for this operation, also as member of the argument of the second
variant of this operation.
<Example>
<#Include SYSTEM "../examples/include/projpol_meet.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="IsIncident" Arg="v, geo"/>
<Oper Name="\*" Arg="v, geo"/>
<Oper Name="\in" Arg="v, geo"/>
<Returns>true or false</Returns>
<Description>
Implentation to be reconsidered. Incidence is only applicable on elements of an Incidence structure.
in must be applicable on subspaces, hence also trivial one.
<Example>
<#Include SYSTEM "../examples/include/projpol_in.include"> 
</Example>
</Description>
</ManSection>

</Section>

<Section>
<Heading>Shadows of Projective Subspaces</Heading>

</Section>
</Chapter>
