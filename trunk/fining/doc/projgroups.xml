<!-- 

  projgroup.xml    FinInG package documentation
                                                                   John Bamberg
                                                                   Anton Betten
                                                                   Jan De Beule
                                                                  Philippe Cara
                                                                 Michel Lavrauw
                                                                  and Maska Law
                                                             and Michael Pauley
                                                            and Max Neunhoeffer
                                                              and Sven Reichard

  Copyright (C) 2009, University of Western Australia
                      Colorado State University
                      Lehrstuhl D fuer Mathematik
                      Ghent University
                      Vrije Universiteit Brussel

This is the chapter of the documentation describing the projective groups.

-->

<Chapter Label="projgroup">
<Heading>Projective Groups</Heading>

A <E>collineation</E> of a projective space is a type preserving bijection of the
elements of the projective space, that preserves incidence. The Fundamental Theorem
of Projective Geometry states that every collineation of a Desarguesian projective
space is induced by a semi-linear map of the underlying vector space.
The group of all linear maps of a given <M>n+1</M>-dimensional
vector space over a given field <M>GF(q)</M> is denoted by <M>GL(n+1,q)</M>. This is
a matrix group consisting of all non-singular <M>n+1</M>-dimensional square matrices
over <M>GF(q)</M>. The group of all semilinear maps 
of the vector space <M>V(n,q)</M> is obtained as the semidirect product of
<M>GL(n,q)</M> and <M>Aut(GF(q))</M>, and is denoted by <Alt Not="HTML"><M>\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">&#915;L(n+1,q)</Alt>.
It is clear that each semilinear map induces a collineation of <M>PG(n,q)</M>. The
Fundamental theorem of Projective Geometry also guarantees that the converse holds. Note also
that <Alt Not="HTML"><M>\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">&#915;L(n+1,q)</Alt> does not act faithfully on the projective points,
and the kernel of its action is the group of scalar matrices, <M>Sc(n+1,q)</M>.
So the group <Alt Not="HTML"><M>P\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">P&#915;L(n+1,q)</Alt> is defined as the group <Alt Not="HTML"><M>\Gamma 
L(n+1,q) / Sc(n+1,q)</M></Alt><Alt Only="HTML">&#915;L(n+1,q)/Sc(n+1,q)</Alt>, and
<M>PGL(n+1,q) = GL(n+1,q) / Sc(n+1,q)</M>.<P/>

An element of the group <M>PGL(n+1,q)</M> is also called a <E>projectivity</E> of
<M>PG(n,q)</M>, and the group <M>PGL(n+1,q)</M> is called the <E>projectivity
group</E> of <M>PG(n,q)</M>. An element of <Alt Not="HTML"><M>P\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">P&#915;L(n+1,q)</Alt> is called a <E>collineation</E> of <M>PG(n,q)</M>
and the group <Alt Not="HTML"><M>P\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">P&#915;L(n+1,q)</Alt> is the <E>collineation group</E> of
<M>PG(n,q)</M>. A <E>correlation</E> of the projective space <M>PG(n,q)</M> is a collineation from
<M>PG(n,q)</M> to its dual. A projectivity from <M>PG(n,q)</M> to its dual is
sometimes called a <E>reciprocity</E>. It is well known that the correlation group
of <M>PG(n,q)</M> is isomorphic to the semidirect product of <Alt Not="HTML"><M>P \Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">P&#915;L(n+1,q)</Alt> with the cyclic group of order 2 generated by the
<E>standard duality</E> of the projective space <M>PG(n,q)</M>. The <E>standard duality</E> of the
projective space <M>PG(n,q)</M> maps any point <M>v</M> with coordinates <Alt
Not="HTML"><M>(x_0,x_1,\ldots,x_n)</M></Alt><Alt
Only="HTML">(x&lt;sub>0&lt;/sub>,x&lt;sub>1&lt;/sub>,...,x&lt;sub>n&lt;/sub>)</Alt> on the hyperplane
with equation <Alt Not="HTML"><M>x_0X_0 + x_1X_1 + \ldots + x_nX_n</M></Alt><Alt
Only="HTML">x&lt;sub>0&lt;/sub>X&lt;sub>0&lt;/sub> + x&lt;sub>1&lt;/sub>X&lt;sub>1&lt;/sub> + ...
x&lt;sub>n&lt;/sub>X&lt;sub>n&lt;/sub> = 0</Alt>. The
standard duality acts as an automorphism on <M>PGL(n+1,q)</M> by mapping each matrix
to its inverse transpose matrix.
The product of two correlations of <M>PG(n,q)</M> is a collineation, and the
product of a collineation and a correlaton is a correlation. So the set of all
collineations and correlations of <M>PG(n,q)</M> form a group, called the
<E>correlation group</E> of <M>PG(n,q)</M>.<P/>
The action of projectivities, collineations and correlations on the subspaces of
a projective space is described in detail in Section <Ref Sect="projgroup_actions"/>

<Section>
<Heading>Projectivities, collineations and correlations of projective spaces</Heading>

In <Package>FinInG</Package>, different categories are created for projectivities,
collineations and correlations of a projective space. 

<ManSection>
<Heading>Categories for group elements</Heading>
<Filt Name="IsProjGrpEl" Type="Category"/>
<Filt Name="IsProjGrpElWithFrob" Type="Category"/>
<Filt Name="IsProjGrpElWithFrobWith" Type="Category"/>
<Description>
<C>IsProjGrpEl</C> is a category in which elements of <M>PGL(n+1,q)</M>
can be constructed as objects in this category. So projectivities in the
mathematical sense can be constructed as objects in this category.
<C>IsProjGrpElWithFrob</C> is a category in which elements of <Alt Not="HTML"><M>P\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">P&#915;L(n+1,q)</Alt> can be constructed. So collineations in the
mathematical sense (and thus also projectivities) can be constructed as objects in
this category.
</Description>
</ManSection>

<ManSection>
<Oper Name="Projectivity" Arg="mat, f"/>
<Returns>a projectivity of a projective space</Returns>
<Description><A>mat</A> must be a non-singular matrix over the finite field
<A>f</A>. Creates an element of a projectivity group. The returned object belongs to
<C>IsProjGrpEl</C>. 
<Example>
<#Include SYSTEM "../examples/include/projgroups_projectivity.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="ProjectiveSemilinearMap" Arg="mat, frob, f"/>
<Oper Name="ProjectiveSemilinearMap" Arg="mat, f"/>
<Oper Name="CollineationOfProjectiveSpace" Arg="mat, frob, f"/>
<Oper Name="CollineationOfProjectiveSpace" Arg="mat, f"/>
<Description>
<A>mat</A> is a nonsingular matrix, <A>frob</A> is a field automorphism, and <A>f</A>
is a field. This function (and its synonym) returns the collineation with matrix
<A>mat</A> and automorphism <A>frob</A>. If <A>frob</A> is not specified 
then the companion automorphism of the resulting group element will be 
the identity map. The returned object belongs to the category
<C>IsProjGrpElWithFrob</C>
<Example>
<#Include SYSTEM "../examples/include/projgroups_collineation.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="StandardDualityOfProjectiveSpace" Arg="ps"/>
<Description>
This operation returns the standard duality of the projective space <A>ps</A>
<Example>
<#Include SYSTEM "../examples/include/projgroups_stduality.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="CorrelationOfProjectiveSpace" Arg="mat, f"/>
<Oper Name="CorrelationOfProjectiveSpace" Arg="mat, frob, f"/>
<Oper Name="CorrelationOfProjectiveSpace" Arg="mat, f, delta"/>
<Oper Name="CorrelationOfProjectiveSpace" Arg="mat, frob, f, delta"/>
<Description>
<A>mat</A> is a nonsingular matrix, <A>frob</A> is a field automorphism, <A>f</A>
is a field, and <A>delta</A> is the standard duality of the projective space
<M>PG(n,q)</M>. This function returns the correlation with matrix
<A>mat</A>, automorphism <A>frob</A>, and standard duality <A>delta</A>. If
<A>frob</A> is not specified then the companion automorphism of the resulting group element will be 
the identity map. If the user specifies <A>delta</A>, then it must be the
standard duality of a projective space, created using
<Ref Oper="StandardDualityOfProjectiveSpace"/>. If not specified, then the companion
vector space isomorphism is the identity mapping.  The returned object belongs to
the category <C>IsProjGrpElWithFrobWithPSIsom</C>
<Example>
<#Include SYSTEM "../examples/include/projgroups_correlation.include"> 
</Example>
</Description>
</ManSection>
</Section>

<Section>
<Heading>Basic operations for projectivities, collineations and correlations of
projective spaces</Heading> 

<ManSection>
<Heading>Representations for group elements</Heading>
<Filt Name="IsProjGrpElRep" Type="Representation"/>
<Filt Name="IsProjGrpElWithFrobRep" Type="Representation"/>
<Filt Name="IsProjGrpElWithFrobWithPSIsom" Type="Representation"/>
<Description>
As we have seen, in <Package>FinInG</Package>, a projectivity is described by
a matrix, a collineation of a projective space by a matrix and a field
automorphism, and a correlation of a projective space by a matrix, a field
automorphism and a isomorphism of the projective space that is either the
standard duality or the identity mapping. Also the basefield is stored as a
component in the representation.
</Description>
</ManSection>

<ManSection>
<Oper Name="UnderlyingMatrix" Arg="g"/>
<Description>
<A>g</A> is a projectivity, collineation or correlation of a projective space.
This function returns the matrix that was used to construct <A>g</A>.
<Example>
<#Include SYSTEM "../examples/include/projgroups_underlyingmatrix.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="BaseField" Arg="g"/>
<Returns>a field</Returns>
<Description>
<A>g</A> is a projectivity, collineation or correlation of a projective space.
This function returns the matrix that was used to construct <A>g</A>.
<Example>
<#Include SYSTEM "../examples/include/projgroups_basefield.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="FieldAutomorphism" Arg="g"/>
<Description>
<A>g</A> is a collineation of a projective space or a correlation of a
projective space. This function returns the companion field automorphism
which defines <A>g</A>. Note that in the following example,
you may want to execute it several times to see the
different possible results generated by the random choice
of projective semilinear map here.
<Example>
<#Include SYSTEM "../examples/include/projgroups_fieldautomorphism.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="ProjectiveSpaceIsomorphism" Arg="g"/>
<Description>
<A>g</A> is a correlation of a projective space. This function returns the
companion isomorphism of the projective space which defines <A>g</A>. 
<Example>
example in projgroups_psisomorphis gives an error.
</Example>
</Description>
</ManSection>

</Section>

<Section>
<Heading>Collineation groups of projective or polar spaces</Heading>



<ManSection>
<Oper Name="CollineationGroup" Arg="geom"/>
<Returns>a group of collineations of geom</Returns>
<Description>
<A>geom</A> must be an incidence geometry. If <A>geom</A> is a projective space,
<M>PG(n,q)</M>, then this operation returns the full group of collineations <Alt Not="HTML"><M>\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">&#915;L(n+1,q)</Alt> of the projective space. 
If <A>geom</A> is a polar space, then this operation returns
the full group of semi-similarities of <A>geom</A>.
<Example>
<#Include SYSTEM "../examples/include/projgroups_collineationgroup.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="SimilarityGroup" Arg="geom"/>
<Returns>a group of collineations of geom</Returns>
<Description><A>geom</A> must be a polar space.
This operation returns the full group of similarities of <A>geom</A>
(those collineations which preserve the form up to a scalar).
<Example>
gap> w := SymplecticSpace(5,3);
W(5, 3)
gap> SimilarityGroup(w);
&lt;projective group with Frobenius with 3 generators&gt;
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="IsometryGroup" Arg="geom"/>
<Returns>a group of collineations of geom</Returns>
<Description><A>geom</A> must be a polar space.
This operation returns the full group of isometries of <A>geom</A>
(those collineations which preserve the form).
<Example>
gap> w := SymplecticSpace(5,3);
W(5, 3)
gap> IsometryGroup(w);
&lt;projective group with Frobenius with 2 generators&gt;
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="IsometryGroup" Arg="geom"/>
<Returns>a group of collineations of geom</Returns>
<Description><A>geom</A> must be a polar space.
This operation returns those isometries of <A>geom</A>
which have unit determinant.
<Example>
gap> hq := HyperbolicQuadric(5,3);
Q+(5, 3)
gap> SpecialIsometryGroup(hq);
&lt;projective group with Frobenius with 3 generators&gt;
</Example>
</Description>
</ManSection>

</Section>

<Section>
<Heading>Basic operations for projective groups</Heading>

<ManSection>
<Oper Name="BaseField" Arg="g"/>
<Returns>a field</Returns>
<Description><A>g</A> must be a projective group. This function finds
the base field of the vector space on which the group acts.
</Description>
</ManSection>

<ManSection>
<Oper Name="Dimension" Arg="g"/>
<Returns>a number</Returns>
<Description><A>g</A> must be a projective group. This function finds
the dimension of the vector space on which the group acts.
</Description>
</ManSection>

<ManSection>
<Oper Name="CanComputeActionOnPoints" Arg="g"/>
<Returns>true or false</Returns>
<Description><A>g</A> must be a projective group. This function returns
true if GAP can feasibly compute the action of <A>g</A> on the
points of the projective space on which it acts. This function can be used
(and is, by other parts of FinInG) to determine whether it is worth
trying to compute the action.

This function actually checks if the number of points of the corresponding
projective space is less than the constant
<C>DESARGUES.LimitForCanComputeActionOnPoints</C>.

<Example>
gap> NiceMonomorphism(CollineationGroup(ProjectiveSpace(6,7)));
Error, action on projective points not feasible to calculate
 ...
gap> DESARGUES.LimitForCanComputeActionOnPoints := 500000;
500000
gap> NiceMonomorphism(CollineationGroup(ProjectiveSpace(6,7)));
&lt;action isomorphism&gt;
</Example>
</Description>
</ManSection>

</Section>
<Section Label="projgroup_actions">
<Heading>Projective group actions</Heading>

Consider the projective space <M>PG(n,q)</M>. As described in Chapter <Ref
Chap="projectivepolar"/>, a point of <M>PG(n,q)</M> is represented by a row
vector and a <M>k</M>-dimensional subspace of <M>PG(n,q)</M> is represented by a
<Alt Not="HTML"><M>(k+1) \times (n+1)</M></Alt><Alt Only="HTML">(k+1) x (n+1)</Alt>
matrix.<P/>
Consider a point <M>p</M> with row vector <Alt Not="HTML"><M>(x_0, x_1, \ldots,
x_n)</M></Alt><Alt
Only="HTML">(x&lt;sub>0&lt;/sub>,x&lt;sub>1&lt;/sub>,...,x&lt;sub>n&lt;/sub>)</Alt>,
and a collineation or correlation <Alt Not="HTML"><M>\phi</M></Alt><Alt
Only="HTML">&#966;</Alt> with underlying matrix <M>A</M> and field automorphism
<Alt Not="HTML"><M>\theta</M></Alt><Alt Only="HTML">&#952;</Alt>. Define the row
vector <Alt Not="HTML"><M>(y_0,y_1,\ldots,y_n)
= ((x_0, x_1, \ldots, x_n) A)^{\theta}</M></Alt><Alt
Only="HTML">(y&lt;sub>0&lt;/sub>,y&lt;sub>1&lt;/sub>,...,y&lt;sub>n&lt;/sub>) =
((x&lt;sub>0&lt;/sub>,x&lt;sub>1&lt;/sub>,...,x&lt;sub>n&lt;/sub>)A)&lt;sup>&#952;&lt;/sup>
</Alt>. When <Alt Not="HTML"><M>\phi</M></Alt><Alt Only="HTML">&#966;</Alt> is a
collineation, then <Alt Not="HTML"><M>p^{\phi}</M></Alt><Alt
Only="HTML">p&lt;sup>&#966;&lt;/sup></Alt> is the point with underlying row
vector <Alt Not="HTML"><M>(y_0,y_1,\ldots,y_n)</M></Alt><Alt
Only="HTML">(y&lt;sub>0&lt;/sub>,y&lt;sub>1&lt;/sub>,...,y&lt;sub>n&lt;/sub>)</Alt>, when <Alt Not="HTML"><M>\phi</M></Alt><Alt Only="HTML">&#966;</Alt> is a
correlation then <Alt Only="HTML">p&lt;sup>&#966;&lt;/sup></Alt> is a hyperplane
of <M>PG(n,q)</M> with equation <Alt Not="HTML"><M>y_0X_0 + y_1X_1 + \ldots + y_nX_n</M></Alt><Alt
Only="HTML">y&lt;sub>0&lt;/sub>X&lt;sub>0&lt;/sub> + y&lt;sub>1&lt;/sub>X&lt;sub>1&lt;/sub> + ...
y&lt;sub>n&lt;/sub>X&lt;sub>n&lt;/sub> = 0</Alt>. The action of collineations or
correlations on points determines the action on subspaces of arbitrary
dimension completely.

<ManSection>
<Func Name="OnProjSubspaces" Arg="subspace, el"/>
<Description>
<A>subspace</A> is a subspace of a projective or polar space. <A>el</A> must be
a projective semilinear map. This function return the image of <A>subspace</A>
under <A>el</A>, which is a subspace of the same dimension.
<Example>
<#Include SYSTEM "../examples/include/projgroups_onprojsubspaces.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Func Name="ActionOnAllProjPoints" Arg="g"/>
<Description>
<A>g</A> must be a projective group. This function returns the action
homomorphism of <A>g</A> acting on its projective points. This function
is used by NiceMonomorphism when the number of points is small enough
for the action to be easy to calculate.
</Description>
</ManSection>

<ManSection>
<Func Name="OnProjSubspacesReverseing" Arg="subspace, el"/>
<Description>
<A>subspace</A> is a subspace of a projective or polar space. <A>el</A> must be
an element of the correlation group of the ambient geometry of <A>subspace</A>.
This function return the image of <A>subspace</A> under <A>el</A>, which is a
subspace of the same dimension if <A>el</A> is a collineation.
<Example>
<#Include SYSTEM "../examples/include/projgroups_onprojsubspacesreversing.include"> 
</Example>
</Description>
</ManSection>


</Section>

</Chapter>
