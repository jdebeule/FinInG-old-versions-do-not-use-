<!-- 

  projgroup.xml    FinInG package documentation
                                                                   John Bamberg
                                                                   Anton Betten
                                                                   Jan De Beule
                                                                  Philippe Cara
                                                                 Michel Lavrauw
                                                                  and Maska Law
                                                             and Michael Pauley
                                                            and Max Neunhoeffer
                                                              and Sven Reichard

  Copyright (C) 2009, University of Western Australia
                      Colorado State University
                      Lehrstuhl D fuer Mathematik
                      Ghent University
                      Vrije Universiteit Brussel

This is the chapter of the documentation describing the projective groups.

-->

<Chapter Label="projgroup">
<Heading>Projective Groups</Heading>

A <E>collineation</E> of a projective space is a type preserving bijection of the
elements of the projective space, that preserves incidence. The Fundamental Theorem
of Projective Geometry states that every collineation of a Desarguesian projective
space is induced by a semi-linear map of the underlying vector space.
The group of all linear maps of a given <M>n+1</M>-dimensional
vector space over a given field <M>GF(q)</M> is denoted by <M>GL(n+1,q)</M>. This is
a matrix group consisting of all non-singular <M>n+1</M>-dimensional square matrices
over <M>GF(q)</M>. The group of all semilinear maps 
of the vector space <M>V(n,q)</M> is obtained as the semidirect product of
<M>GL(n,q)</M> and <M>Aut(GF(q))</M>, and is denoted by <Alt Not="HTML"><M>\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">&#915;L(n+1,q)</Alt>.
It is clear that each semilinear map induces a collineation of <M>PG(n,q)</M>. The
Fundamental theorem of Projective Geometry also guarantees that the converse holds. Note also
that <Alt Not="HTML"><M>\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">&#915;L(n+1,q)</Alt> does not act faithfully on the projective points,
and the kernel of its action is the group of scalar matrices, <M>Sc(n+1,q)</M>.
So the group <Alt Not="HTML"><M>P\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">P&#915;L(n+1,q)</Alt> is defined as the group <Alt Not="HTML"><M>\Gamma 
L(n+1,q) / Sc(n+1,q)</M></Alt><Alt Only="HTML">&#915;L(n+1,q)/Sc(n+1,q)</Alt>, and
<M>PGL(n+1,q) = GL(n+1,q) / Sc(n+1,q)</M>. An element of the group <M>PGL(n+1,q)</M> is also 
called a <E>projectivity</E> or <E>homography</E> of
<M>PG(n,q)</M>, and the group <M>PGL(n+1,q)</M> is called the <E>projectivity
group</E> or <E>homography group</E> of <M>PG(n,q)</M>. An element of <Alt Not="HTML"><M>P\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">P&#915;L(n+1,q)</Alt> is called a <E>collineation</E> of <M>PG(n,q)</M>
and the group <Alt Not="HTML"><M>P\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">P&#915;L(n+1,q)</Alt> is the <E>collineation group</E> of
<M>PG(n,q)</M>.<P/>

As usual, we also consider the special linear group <M>SL(n+1,q)</M>, which is the subgroup of <M>GL(n+1,q)</M>
of all matrices having determinant one. Its projective variant, i.e. <M>PSL(n+1,q) = SL(n+1,q) / Sc(n+1,q)</M>
is called the <E>special homography group</E> or <E>special projectivity group</E> of <M>PG(n,q)</M>.
<P/>

Consider the projective space <M>PG(n,q)</M>. As described in Chapter <Ref
Chap="projective_spaces"/>, a point of <M>PG(n,q)</M> is represented by a row
vector. A <M>k</M>-dimensional subspace of <M>PG(n,q)</M> is represented by a
generating set of <M>k+1</M> points, and as such, by a 
<Alt Not="HTML"><M>(k+1) \times (n+1)</M></Alt><Alt Only="HTML">(k+1) x (n+1)</Alt>
matrix. The convention in <Package>FinInG</Package> is that a collineation  
<Alt Not="HTML"><M>\phi</M></Alt><Alt
Only="HTML">&#966;</Alt> with underlying matrix <M>A</M> and field automorphism
<Alt Not="HTML"><M>\theta</M></Alt><Alt Only="HTML">&#952;</Alt> maps that projective 
point represented by row vector <Alt Not="HTML"><M>(x_0, x_1, \ldots,
x_n)</M></Alt><Alt Only="HTML">(x&lt;sub>0&lt;/sub>,x&lt;sub>1&lt;/sub>,...,x&lt;sub>n&lt;/sub>)</Alt>
to the projective point represented by row vector <Alt Not="HTML"><M>(y_0,y_1,\ldots,y_n)
= ((x_0, x_1, \ldots, x_n) A)^{\theta}</M></Alt><Alt
Only="HTML">(y&lt;sub>0&lt;/sub>,y&lt;sub>1&lt;/sub>,...,y&lt;sub>n&lt;/sub>) =
((x&lt;sub>0&lt;/sub>,x&lt;sub>1&lt;/sub>,...,x&lt;sub>n&lt;/sub>)A)&lt;sup>&#952;&lt;/sup>
</Alt>. This convention determines completely the action of collineations on all elements 
of a projective space, and it follows that the product of two collineations 
<Alt Not="HTML"><M>\phi_1,\phi_2</M></Alt><Alt
Only="HTML">&#966;&lt;sub>1&lt;/sub>,&#966;&lt;sub>2&lt;/sub></Alt> with respective
underlying matrices <Alt Not="HTML"><M>A_1,A_2</M></Alt><Alt
Only="HTML">A&lt;sub>1&lt;/sub>,A&lt;sub>2&lt;/sub></Alt> and respective underlying
field automorphisms <Alt Not="HTML"><M>\theta_1,\theta_2</M></Alt><Alt
Only="HTML">&#952;&lt;sub>1&lt;/sub>,&#952;&lt;sub>2&lt;/sub></Alt> is the collineation with
underlying matrix <Alt Not="HTML"><M>A_1 \cdot A_2^{\theta_2^{-1}}</M></Alt><Alt
Only="HTML">A&lt;sub>1&lt;/sub>A&lt;sub>2&lt;/sub>&lt;sup>&#952;&lt;sub>2&lt;/sub>&lt;sup>-1&lt;/sup>&lt;/sup></Alt> 
and underlying field automorphism <Alt Not="HTML"><M>\theta_1 \theta_2</M></Alt>
<Alt Only="HTML">&#952;&lt;sub>1&lt;/sub>&#952;&lt;sub>2&lt;/sub></Alt>.<P/>

A <E>correlation</E> of the projective space <M>PG(n,q)</M> is a collineation from
<M>PG(n,q)</M> to its dual. A projectivity from <M>PG(n,q)</M> to its dual is
sometimes called a <E>reciprocity</E>. The correlation group
of <M>PG(n,q)</M> is isomorphic to the semidirect product of <Alt Not="HTML"><M>P \Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">P&#915;L(n+1,q)</Alt> with the cyclic group of order 2 generated by the
<E>standard duality</E> of the projective space <M>PG(n,q)</M>. The <E>standard duality</E> of the
projective space <M>PG(n,q)</M> maps any point <M>v</M> with coordinates <Alt
Not="HTML"><M>(x_0,x_1,\ldots,x_n)</M></Alt><Alt
Only="HTML">(x&lt;sub>0&lt;/sub>,x&lt;sub>1&lt;/sub>,...,x&lt;sub>n&lt;/sub>)</Alt> on the hyperplane
with equation <Alt Not="HTML"><M>x_0X_0 + x_1X_1 + \cdots + x_nX_n</M></Alt><Alt
Only="HTML">x&lt;sub>0&lt;/sub>X&lt;sub>0&lt;/sub> + x&lt;sub>1&lt;/sub>X&lt;sub>1&lt;/sub> + ...
x&lt;sub>n&lt;/sub>X&lt;sub>n&lt;/sub> = 0</Alt>. The
standard duality acts as an automorphism on <Alt Not="HTML"><M>P\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">P&#915;L(n+1,q)</Alt> by mapping the underlying matrix of a collineation
to its inverse transpose matrix. (Recall that the frobenius automorphism and the standard duality commute.) 
The convention in <Package>FinInG</Package> is that a correlation  
<Alt Not="HTML"><M>\phi</M></Alt><Alt
Only="HTML">&#966;</Alt> with underlying matrix <M>A</M> and field automorphism
<Alt Not="HTML"><M>\theta</M></Alt><Alt Only="HTML">&#952;</Alt> maps that projective 
point represented by row vector <Alt Not="HTML"><M>(x_0, x_1, \ldots,
x_n)</M></Alt><Alt Only="HTML">(x&lt;sub>0&lt;/sub>,x&lt;sub>1&lt;/sub>,...,x&lt;sub>n&lt;/sub>)</Alt>
to the projective hyperplane represented by row vector <Alt Not="HTML"><M>(y_0,y_1,\ldots,y_n)
= ((x_0, x_1, \ldots, x_n) A)^{\theta.}</M></Alt><Alt
Only="HTML">(y&lt;sub>0&lt;/sub>,y&lt;sub>1&lt;/sub>,...,y&lt;sub>n&lt;/sub>) =
((x&lt;sub>0&lt;/sub>,x&lt;sub>1&lt;/sub>,...,x&lt;sub>n&lt;/sub>)A)&lt;sup>&#952;&lt;/sup>.
</Alt><P/>

The product of two correlations of <M>PG(n,q)</M> is a collineation, and the
product of a collineation and a correlaton is a correlation. So the set of all
collineations and correlations of <M>PG(n,q)</M> form a group, called the
<E>correlation group</E> of <M>PG(n,q)</M>. The convention determines completely 
the action of correlations on all elements 
of a projective space, and it follows that the product of two elements of the correlation group 
<Alt Not="HTML"><M>\phi_1,\phi_2</M></Alt><Alt
Only="HTML">&#966;&lt;sub>1&lt;/sub>,&#966;&lt;sub>2&lt;/sub></Alt> with respective
underlying matrices <Alt Not="HTML"><M>A_1,A_2</M></Alt><Alt
Only="HTML">A&lt;sub>1&lt;/sub>,A&lt;sub>2&lt;/sub></Alt>, respective underlying
field automorphisms <Alt Not="HTML"><M>\theta_1,\theta_2</M></Alt><Alt
Only="HTML">&#952;&lt;sub>1&lt;/sub>,&#952;&lt;sub>2&lt;/sub></Alt>, and respective underlying 
projective space isomorphisms (standard duality or identity map) <Alt Not="HTML"><M>\delta_1,\delta_2</M></Alt><Alt
Only="HTML">&#948;&lt;sub>1&lt;/sub>,&#948;&lt;sub>2&lt;/sub></Alt>, is the element of 
the correlation group with underlying matrix <Alt Not="HTML"><M>A_1 \cdot (A_2^{\theta_2^{-1}})^\delta_2</M></Alt><Alt
Only="HTML">A&lt;sub>1&lt;/sub>(A&lt;sub>2&lt;/sub>&lt;sup>&#952;&lt;sub>2&lt;/sub>&lt;sup>-1&lt;/sup>&lt;/sup>)&lt;sup>
&#948;&lt;sub>2&lt;/sub>&lt;/sup></Alt>,
underlying field automorphism <Alt Not="HTML"><M>\theta_1 \theta_2</M></Alt>
<Alt Only="HTML">&#952;&lt;sub>1&lt;/sub>&#952;&lt;sub>2&lt;/sub></Alt>, and underlying projective space automorphism 
<Alt Not="HTML"><M>\delta_1 \delta_2.</M></Alt>
<Alt Only="HTML">&#948;&lt;sub>1&lt;/sub>&#948;&lt;sub>2&lt;/sub>.</Alt>
<P/>
Action functions for collineations and correlations on the subspaces of
a projective space are described in detail in Section <Ref Sect="projgroup_actions"/>
<P/>
We mention that the commands <F>PGL</F> (and <F>ProjectiveGeneralLinearGroup</F>) 
and <F>PSL</F> (and <F>ProjectiveSpecialLinearGroup</F>) are available in GAP 
and return a (permutation) group isomorphic to the required group. Therefore we do
not provide new methods for these commands, but assume that the user will obtain these
groups as homography or special homography group of the appropriate projective space.
We will follow this philosophy for the other classical groups. 

<Section>
<Heading>Projectivities, collineations and correlations of projective spaces</Heading>

In <Package>FinInG</Package>, different categories are created for projectivities,
collineations and correlations of a projective space. 

<ManSection>
<Heading>Categories for group elements</Heading>
<Filt Name="IsProjGrpEl" Type="Category"/>
<Filt Name="IsProjGrpElWithFrob" Type="Category"/>
<Filt Name="IsProjGrpElWithFrobWith" Type="Category"/>
<Description>
<C>IsProjGrpEl</C> is a category in which elements of <M>PGL(n+1,q)</M>
can be constructed as objects in this category. So projectivities in the
mathematical sense can be constructed as objects in this category.
<C>IsProjGrpElWithFrob</C> is a category in which elements of <Alt Not="HTML"><M>P\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">P&#915;L(n+1,q)</Alt> can be constructed. So collineations in the
mathematical sense (and thus also projectivities) can be constructed as objects in
this category.
</Description>
</ManSection>

<ManSection>
<Oper Name="Projectivity" Arg="mat, f"/>
<Returns>a projectivity of a projective space</Returns>
<Description><A>mat</A> must be a non-singular matrix over the finite field
<A>f</A>. Creates an element of a projectivity group. The returned object belongs to
<C>IsProjGrpEl</C>. 
<Example>
<#Include SYSTEM "../examples/include/projgroups_projectivity.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="ProjectiveSemilinearMap" Arg="mat, frob, f"/>
<Oper Name="ProjectiveSemilinearMap" Arg="mat, f"/>
<Oper Name="CollineationOfProjectiveSpace" Arg="mat, frob, f"/>
<Oper Name="CollineationOfProjectiveSpace" Arg="mat, f"/>
<Description>
<A>mat</A> is a nonsingular matrix, <A>frob</A> is a field automorphism, and <A>f</A>
is a field. This function (and its synonym) returns the collineation with matrix
<A>mat</A> and automorphism <A>frob</A>. If <A>frob</A> is not specified 
then the companion automorphism of the resulting group element will be 
the identity map. The returned object belongs to the category
<C>IsProjGrpElWithFrob</C>. When the argument <A>frob</A> is given,
it is checked whether the source of <A>frob</A> equals <A>f</A>.
<Example>
<#Include SYSTEM "../examples/include/projgroups_collineation.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="StandardDualityOfProjectiveSpace" Arg="ps"/>
<Description>
This operation returns the standard duality of the projective space <A>ps</A>
<Example>
<#Include SYSTEM "../examples/include/projgroups_stduality.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="CorrelationOfProjectiveSpace" Arg="mat, f"/>
<Oper Name="CorrelationOfProjectiveSpace" Arg="mat, frob, f"/>
<Oper Name="CorrelationOfProjectiveSpace" Arg="mat, f, delta"/>
<Oper Name="CorrelationOfProjectiveSpace" Arg="mat, frob, f, delta"/>
<Description>
<A>mat</A> is a nonsingular matrix, <A>frob</A> is a field automorphism, <A>f</A>
is a field, and <A>delta</A> is the standard duality of the projective space
<M>PG(n,q)</M>. This function returns the correlation with matrix
<A>mat</A>, automorphism <A>frob</A>, and standard duality <A>delta</A>. If
<A>frob</A> is not specified then the companion automorphism of the resulting group element will be 
the identity map. If the user specifies <A>delta</A>, then it must be the
standard duality of a projective space, created using
<Ref Oper="StandardDualityOfProjectiveSpace"/>. If not specified, then the companion
vector space isomorphism is the identity mapping.  The returned object belongs to
the category <C>IsProjGrpElWithFrobWithPSIsom</C>
<Example>
<#Include SYSTEM "../examples/include/projgroups_correlation.include"> 
</Example>
</Description>
</ManSection>
</Section>

<Section>
<Heading>Basic operations for projectivities, collineations and correlations of
projective spaces</Heading> 

<ManSection>
<Heading>Representations for group elements</Heading>
<Filt Name="IsProjGrpElRep" Type="Representation"/>
<Filt Name="IsProjGrpElWithFrobRep" Type="Representation"/>
<Filt Name="IsProjGrpElWithFrobWithPSIsom" Type="Representation"/>
<Description>
As we have seen, in <Package>FinInG</Package>, a projectivity is described by
a matrix, a collineation of a projective space by a matrix and a field
automorphism, and a correlation of a projective space by a matrix, a field
automorphism and a isomorphism of the projective space that is either the
standard duality or the identity mapping. Also the basefield is stored as a
component in the representation.
</Description>
</ManSection>

<ManSection>
<Oper Name="UnderlyingMatrix" Arg="g"/>
<Description>
<A>g</A> is a projectivity, collineation or correlation of a projective space.
This function returns the matrix that was used to construct <A>g</A>.
<Example>
<#Include SYSTEM "../examples/include/projgroups_underlyingmatrix.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="BaseField" Arg="g"/>
<Returns>a field</Returns>
<Description>
<A>g</A> is a projectivity, collineation or correlation of a projective space.
This function returns the base field that was used to construct <A>g</A>.
<Example>
<#Include SYSTEM "../examples/include/projgroups_basefield.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="FieldAutomorphism" Arg="g"/>
<Description>
<A>g</A> is a collineation of a projective space or a correlation of a
projective space. This function returns the companion field automorphism
which defines <A>g</A>. Note that in the following example,
you may want to execute it several times to see the
different possible results generated by the random choice
of projective semilinear map here.
<Example>
<#Include SYSTEM "../examples/include/projgroups_fieldautomorphism.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="ProjectiveSpaceIsomorphism" Arg="g"/>
<Description>
<A>g</A> is a correlation of a projective space. This function returns the
companion isomorphism of the projective space which defines <A>g</A>. 
<Example>
<#Include SYSTEM "../examples/include/projgroups_psisomorphism.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="Representative" Arg="g"/>
<Description>
<A>g</A> is a projectivity, collineation or correlation of a projective space.
This function returns the reresentative components that determine <A>g</A>, i.e. a matrix, 
a matricx and a field automorphism, and a matrix, a field automorphism, and a vector space isomorphism, 
respectively.
<Example>
<#Include SYSTEM "../examples/include/projgroups_representative.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="Order" Arg="g"/>
<Description>
<A>g</A> is a projectivity, collineation or correlation of a projective space.
This function returns the order of <A>g</A>.
<Example>
<#Include SYSTEM "../examples/include/projgroups_order.include"> 
</Example>
</Description>
</ManSection>


</Section>

<Section>
<Heading>The groups <Alt Not="HTML"><M>P\Gamma{}L</M></Alt><Alt Only="HTML"><M>P&#915;L</M></Alt>, 
<M>PGL</M>, and <M>PSL</M> in <Package>FinInG</Package>
</Heading>

<ManSection>
<Oper Name="CollineationGroup" Arg="geom"/>
<Returns>the group of collineations of geom</Returns>
<Description>
Let <A>geom</A> be the projective space <M>PG(n,q)</M> This operation returns the 
group of collineations <Alt Not="HTML"><M>\Gamma L(n+1,q)</M></Alt><Alt
Only="HTML">&#915;L(n+1,q)</Alt> of the projective space <M>PG(n,q)</M>. If
<M>GF(q)</M> has no non-trivial field automorphisms, i.e. when <M>q</M> is prime,
the group <M>PGL(n+1,q)</M> is the full collineation group and will be returned.
<Example>
<#Include SYSTEM "../examples/include/projgroups_collineationgroup.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="ProjectivityGroup" Arg="geom"/>
<Oper Name="HomographyGroup" Arg="geom"/>
<Returns>the group of projectivities of geom</Returns>
<Description>
Let <A>geom</A> be the projective space <M>PG(n,q)</M> This operation (and its synonym) returns the 
group of projectivities <M>PGL(n+1,q)</M> of the projective space <M>PG(n,q)</M>.
<Example>
<#Include SYSTEM "../examples/include/projgroups_projectivitygroup.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="SpecialProjectivityGroup" Arg="geom"/>
<Oper Name="SpecialHomographyGroup" Arg="geom"/>
<Returns>the group of special projectivities of geom</Returns>
<Description>
Let <A>geom</A> be the projective space <M>PG(n,q)</M> This operation (and its synonym) returns the 
group of special projectivities <M>PSL(n+1,q)</M> of the projective space <M>PG(n,q)</M>.
<Example>
<#Include SYSTEM "../examples/include/projgroups_specialprojectivitygroup.include"> 
</Example>
</Description>
</ManSection>
</Section>

<Section>
<Heading>Basic operations for projective groups</Heading>

<ManSection>
<Oper Name="BaseField" Arg="g"/>
<Returns>a field</Returns>
<Description><A>g</A> must be a projective group. This function finds
the base field of the vector space on which the group acts.
</Description>
</ManSection>

<ManSection>
<Attr Name="Dimension" Arg="g"/>
<Returns>a number</Returns>
<Description><A>g</A> must be a projective group. This function finds
the dimension of the vector space on which the group acts.
</Description>
</ManSection>
</Section>


<Section>
<Heading>Natural embedding of a collineation group in a correlation group</Heading>
In <Package>FinInG</Package> a collineation group is not constructed as a subgroup of a correlation group.
However, collineations can be multiplied with correlations (if they both belong mathematically to the same 
correlation group.

<Example>
<#Include SYSTEM "../examples/include/projgroups_mult.include"> 
</Example>

<ManSection>
<Func Name="Embedding" Arg="coll, corr"/>
<Description>
Let <A>coll</A> be a the full collineation group of a projective space, and <A>corr</A> its full correlation
group. <Package>FinInG</Package> provides a method for this operation <F>Embedding</F>, returning the natural embedding
from <A>coll</A> into <A>corr</A>. Remark that only an embedding of a collineation group into a correlation group with exactly the
same underlying projective space is possible.
<Example>
<#Include SYSTEM "../examples/include/projgroups_embedding.include"> 
</Example>
</Description>
</ManSection>

</Section>
<Section>
<Heading>Basic action of projective group element</Heading>
<ManSection>
    <Oper Name="\^" Arg="x,g"/>
 <Returns>a subspace of a projective space</Returns>
<Description>
This is an operation which returns the image of <A>x</A>, a subspace of a projective space, under <A>g</A>, an element of the projective group, the collineation group, or the correlation group.
 </Description>
</ManSection>
</Section>

<Section Label="projgroup_actions">
<Heading>Projective group actions</Heading>
In this section we give more detailed about the actions that are used in <Package>FinInG</Package> for projective groups.
Consider the projective space <M>PG(n,q)</M>. As described in Chapter <Ref
Chap="projective_spaces"/>, a point of <M>PG(n,q)</M> is represented by a row
vector and a <M>k</M>-dimensional subspace of <M>PG(n,q)</M> is represented by a
<Alt Not="HTML"><M>(k+1) \times (n+1)</M></Alt><Alt Only="HTML">(k+1) x (n+1)</Alt>
matrix.<P/>
Consider a point <M>p</M> with row vector <Alt Not="HTML"><M>(x_0, x_1, \ldots,
x_n)</M></Alt><Alt
Only="HTML">(x&lt;sub>0&lt;/sub>,x&lt;sub>1&lt;/sub>,...,x&lt;sub>n&lt;/sub>)</Alt>,
and a collineation or correlation <Alt Not="HTML"><M>\phi</M></Alt><Alt
Only="HTML">&#966;</Alt> with underlying matrix <M>A</M> and field automorphism
<Alt Not="HTML"><M>\theta</M></Alt><Alt Only="HTML">&#952;</Alt>. Define the row
vector <Alt Not="HTML"><M>(y_0,y_1,\ldots,y_n)
= ((x_0, x_1, \ldots, x_n) A)^{\theta}</M></Alt><Alt
Only="HTML">(y&lt;sub>0&lt;/sub>,y&lt;sub>1&lt;/sub>,...,y&lt;sub>n&lt;/sub>) =
((x&lt;sub>0&lt;/sub>,x&lt;sub>1&lt;/sub>,...,x&lt;sub>n&lt;/sub>)A)&lt;sup>&#952;&lt;/sup>
</Alt>. When <Alt Not="HTML"><M>\phi</M></Alt><Alt Only="HTML">&#966;</Alt> is a
collineation, then <Alt Not="HTML"><M>p^{\phi}</M></Alt><Alt
Only="HTML">p&lt;sup>&#966;&lt;/sup></Alt> is the point with underlying row
vector <Alt Not="HTML"><M>(y_0,y_1,\ldots,y_n)</M></Alt><Alt
Only="HTML">(y&lt;sub>0&lt;/sub>,y&lt;sub>1&lt;/sub>,...,y&lt;sub>n&lt;/sub>)</Alt>, when <Alt Not="HTML"><M>\phi</M></Alt><Alt Only="HTML">&#966;</Alt> is a
correlation then <Alt Only="HTML">p&lt;sup>&#966;&lt;/sup></Alt> is a hyperplane
of <M>PG(n,q)</M> with equation <Alt Not="HTML"><M>y_0X_0 + y_1X_1 + \ldots + y_nX_n</M></Alt><Alt
Only="HTML">y&lt;sub>0&lt;/sub>X&lt;sub>0&lt;/sub> + y&lt;sub>1&lt;/sub>X&lt;sub>1&lt;/sub> + ...
y&lt;sub>n&lt;/sub>X&lt;sub>n&lt;/sub> = 0</Alt>. The action of collineations or
correlations on points determines the action on subspaces of arbitrary
dimension completely.

<ManSection>
<Func Name="OnProjSubspaces" Arg="subspace, el"/>
<Returns>a subspace of a projective space</Returns>
<Description>
This is a global function that returns the action of an element <A>g</A> of the collineation group on a subspace <A>subspace</A> of a projective space.
<Example>
<#Include SYSTEM "../examples/include/projgroups_onprojsubspaces.include"> 
</Example>
</Description>
</ManSection>


<ManSection>
<Func Name="ActionOnAllProjPoints" Arg="g"/>
<Description>
<A>g</A> must be a projective group. This function returns the action
homomorphism of <A>g</A> acting on its projective points. This function
is used by NiceMonomorphism when the number of points is small enough
for the action to be easy to calculate.
</Description>
</ManSection>

<ManSection>
<Func Name="OnProjSubspacesReversing" Arg="subspace, el"/>
<Returns>a subspace of a projective space</Returns>
<Description>
This should be used for the action of elements in the category <C>IsProjGrpElWithFrobWithPSIsom</C> (including the representation of collineations as correlations with third argument the identity, see <Ref Oper="CorrelationOfProjectiveSpace"/>), where
<A>subspace</A> is a subspace of a projective or polar space and <A>el</A> is
an element of the correlation group of the ambient geometry of <A>subspace</A>.
This function returns the image of <A>subspace</A> under <A>el</A>, which is a
subspace of the same dimension as <A>subspace</A> if <A>el</A> is a collineation and an element of codimension equal to the dimension of <A>subspace</A> if <A>el</A> is a correlation.
<Example>
<#Include SYSTEM "../examples/include/projgroups_onprojsubspacesreversing.include"> 
</Example>
</Description>
</ManSection>


</Section>

<Section>
<Heading>Special subgroups of the projectivity group</Heading>
A <E>transvection</E> of the vector space <M>V=V(n+1,F)</M> is a linear map <Alt Only="HTML">&#964;</Alt><Alt Not="HTML"><M>\tau</M></Alt>
from <M>V</M> to <M>V</M> with matrix <M>M</M> such that <M>rk(M-I)=1</M> and <Alt Only="HTML">(M-I)&lt;sup>2&lt;/sup>=0</Alt>
<Alt Not="HTML"><M>(M-I)^2=0</M></Alt>. Different equivalent definitions 
are found in the literature, here we followed <Cite Key="Cameron2"/>. From the definition it follows that
<M>M</M> is the identity matrix or all eigenvalues of <M>M</M> equal one and <Alt Only="HTML">&#964;</Alt><Alt Not="HTML"><M>\tau</M></Alt>
fixes all vectors in a vector hyperplane of <M>V(n+1,F)</M>. We can choose the base of <M>V</M> such that <Alt Not="HTML"><M>e_1,\ldots,e_{n-1}</M></Alt>
<Alt Only="HTML">e&lt;sub>1&lt;/sub>...e&lt;sub>n-1&lt;/sub></Alt> belongs to <Alt Only="HTML">Ker(&#694;)</Alt><Alt Not="HTML"><M>Ker(\tau)</M></Alt>,
implying 
<Alt Only="LaTeX"><Display>\left( \begin{array}{ccccc}
1 &amp; 0 &amp; \ldots &amp; 0 &amp; 0 \\ 
0 &amp; 1 &amp; \ldots &amp; 0 &amp; 0 \\ 
\vdots &amp; \vdots &amp; \ddots &amp; \vdots &amp; \vdots \\
x_1 &amp; x_2 &amp; \ldots &amp; x_{n-1} &amp; 1 \\ 
\end{array} \right).</Display>
</Alt>
<Alt Only="HTML">
&lt;table style="color:#000">&lt;tr>
&lt;td>&lt;table border=0 cellpadding=0 cellspacing=0px style="border-left:1px solid #000; border-right:1px solid #000; color:#000">&lt;tr>
&lt;td style ="border-top:1px solid #000; border-bottom:1px solid #000;">&nbsp;&lt;/td>&lt;td>&lt;table border=0 cellpadding=0 cellspacing=0 style="color:#000;">
&lt;tr>
&lt;td align="center" valign="center" width=30>1&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>2&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>1&lt;/td>
&lt;td align="center" valign="center" width=30>2&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>3&lt;/td>
&lt;td align="center" valign="center" width=30>3&lt;/td>
&lt;td align="center" valign="center" width=30>4&lt;/td>
&lt;td align="center" valign="center" width=30>3&lt;/td>
&lt;td align="center" valign="center" width=30>3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>1&lt;/td>
&lt;td align="center" valign="center" width=30>2&lt;/td>
&lt;td align="center" valign="center" width=30>2&lt;/td>
&lt;td align="center" valign="center" width=30>6&lt;/td>
&lt;td align="center" valign="center" width=30>1&lt;/td>
&lt;/tr>
&lt;/table>&lt;/td>&lt;td style ="border-top:1px solid #000; border-bottom:1px solid #000;">&nbsp;&lt;/td>&lt;/tr>&lt;/table>&lt;/td>
&lt;/tr>&lt;/table>
</Alt>


Elations, homologies and Singer cycles seems to be asked by our test users!

<ManSection>
    <Oper Name="ElationOfProjectiveSpace" Arg="sub,point1,point2"/>
 <Returns>the elation</Returns>
<Description>
Explain
 </Description>
</ManSection>
</Section>

<Section Label="nice_mono">
<Heading>Nice Monomorphisms</Heading>
A <E>nice monomorphism</E> of a group <M>G</M> is roughly just a permutation representation of 
<M>G</M> on a suitable action domain. An easy example is the permutation action of the full collineation 
group of a projective space on its points. <Package>FinInG</Package> provides (automotic) functionality to
compute nice monomorphisms. Typically, for a geometry <M>S</M> with <M>G</M> a (subgroup of the) collineation
group of <M>S</M>, a nice monomorphism for <M>G</M> is a homomorphism from <M>G</M> to the permutation action
of <M>S</M> on a collection of elements of <M>S</M>. Thus, to obtain such a homomorphism, one has to enumerate 
the collection of elements. As nice monomorphisms for projective semilinear groups are often computed as a
byproduct of some operations, suddenly, these operations get time consuming (when executed for the first time). 
<Package>FinInG</Package> contains a switch to influence this behaviour. 

<ManSection>
<Oper Name="NiceMonomorphism" Arg="g"/>
<Returns>an action, i.e. a group homomorphism</Returns>
<Description>
<A>g</A> is a projective semilinear group. If <A>g</A> was constructed as a group stabilizing a geometry, 
the action of <A>g</A> on the points of the geometry is returned. 
<Example>
<#Include SYSTEM "../examples/include/projgroups_nicem.include"> 
</Example>
</Description>
</ManSection>

<ManSection>
<Oper Name="NiceObject" Arg="g"/>
<Returns>a permutation group</Returns>
<Description>
<A>g</A> is a projective semilinear group. If <A>g</A> was constructed as a group stabilizing a geometry, 
the permutation representation of <A>g</A> acting on the points of the geometry is returned. This is actually
equivalent with <F>Image(NiceMonomorphism(g))</F>.
<Example>
<#Include SYSTEM "../examples/include/projgroups_niceo.include"> 
</Example>
</Description>
</ManSection>


<ManSection>
<Oper Name="CanComputeActionOnPoints" Arg="g"/>
<Returns>true or false</Returns>
<Description><A>g</A> must be a projective group. This function returns
true if GAP can feasibly compute the action of <A>g</A> on the
points of the projective space on which it acts. This function can be used
(and is, by other parts of FinInG) to determine whether it is worth
trying to compute the action.

This function actually checks if the number of points of the corresponding
projective space is less than the constant
<C>DESARGUES.LimitForCanComputeActionOnPoints</C>, which is by default set to <M>1000000</M>.
The next example requires about 500M of memory.
<Example>
<#Include SYSTEM "../examples/include/projgroups_cancompute.include"> 
</Example>
</Description>
</ManSection>

</Section>


</Chapter>
