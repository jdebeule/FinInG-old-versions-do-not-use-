<!-- 

  examples.xml            FinInG package documentation
                                                                   John Bamberg
                                                               and Anton Betten
                                                               and Jan De Beule
                                                              and Philippe Cara
                                                                  and Maska Law
                                                            and Max Neunhoeffer
                                                             and Michael Pauley
                                                              and Sven Reichard

  Copyright (C) 2009, University of Western Australia
                      Lehrstuhl D fuer Mathematik
                      Universiteit Gent
                      Colorado State University
                      Vrije Universiteit Brussel

This chapter gives examples for the usage of this package.

-->

<Chapter Label="examples">
<Heading>Examples</Heading>

In this chapter we provide some simple examples of the use of
<Package>FinInG</Package>.

<Section>
<Heading>A simple example to get you started</Heading>

In this example, we consider a hyperoval of the projective
plane <M>PG(2,4)</M>, that is, six points no three collinear.
We will construct such a hyperoval by exploring a bit the particular
properties of the projective plane <M>PG(2,4)</M>. The projective
plane is initalised, its points are computed and listed; then a standard
frame is constructed, of which we may assume that it is a subset
of the hyperoval. 

Finally, the stabiliser group of the hyperoval is
computed, and it is checked that this group is isomorphic with the 
symmetric group on six elements.

<Example>
<#Include SYSTEM "../examples/include/examples_pg24.include"> 
</Example>

Now we may assume that our hyperoval contains the fundamental frame.

<Example>
<#Include SYSTEM "../examples/include/web_hyperoval24.include"> 
</Example>

There are six secant lines to this frame (``four choose two''). So we 
put together these secant lines from the pairs of points of this frame.

<Example>
gap> pairs := Combinations( frame, 2 );
[ [ &lt;a point in PG(2, 4)&gt;, &lt;a point in PG(2, 4)&gt; ], 
  [ &lt;a point in PG(2, 4)&gt;, &lt;a point in PG(2, 4)&gt; ], 
  [ &lt;a point in PG(2, 4)&gt;, &lt;a point in PG(2, 4)&gt; ], 
  [ &lt;a point in PG(2, 4)&gt;, &lt;a point in PG(2, 4)&gt; ], 
  [ &lt;a point in PG(2, 4)&gt;, &lt;a point in PG(2, 4)&gt; ], 
  [ &lt;a point in PG(2, 4)&gt;, &lt;a point in PG(2, 4)&gt; ] ]
gap> secants := List( pairs, p -> Span(p[1], p[2]) );
[ &lt;a line in PG(2, 4)&gt;, &lt;a line in PG(2, 4)&gt;, &lt;a line in PG(2, 4)&gt;, 
  &lt;a line in PG(2, 4)&gt;, &lt;a line in PG(2, 4)&gt;, &lt;a line in PG(2, 4)&gt; ]
</Example>

By a counting argument, it is known that the frame of <M>PG(2,4)</M>
completes uniquely to a hyperoval.

<Example>
gap> leftover := Filtered( pointslist, t -> not ForAny( secants, s -> t in s ) );
[ &lt;a point in PG(2, 4)&gt;, &lt;a point in PG(2, 4)&gt; ]
gap> hyperoval := Union( frame, leftover );
[ &lt;a point in PG(2, 4)&gt;, &lt;a point in PG(2, 4)&gt;, &lt;a point in PG(2, 4)&gt;, 
  &lt;a point in PG(2, 4)&gt;, &lt;a point in PG(2, 4)&gt;, &lt;a point in PG(2, 4)&gt; ]
</Example>

This hyperoval has the symmetric group on six symbols as its stabiliser, which can easily be calculated:

<Example>
gap> g := CollineationGroup(pg);
PGammaL(3,4)
gap> stab := Stabilizer(g, Set(hyperoval), OnSetsProjSubspaces);
&lt;projective semilinear group of size 720&gt;
gap> StructureDescription( stab );
"S6"
</Example>
</Section>

<Section>
<Heading>Polar Spaces</Heading>

<Subsection>
<Heading>Lines meeting a hermitian curve</Heading>

Here we see how the lines of a projective plane 
<Alt Not="HTML"><M>PG(2,q^2)</M></Alt> 
<Alt Only="HTML">PG(2,q&lt;sup>2 &lt;/sup>)</Alt>
meet a hermitian curve. It is well known that every line meets in either
1 or <M>q+1</M> points.
  
<Example>
<#Include SYSTEM "../examples/include/examples_hermitian.include"> 
</Example>
</Subsection>


<Subsection>
<Heading><M>W(3,3)</M> inside <M>W(5,3)</M></Heading>

In this example, we embed <M>W(3,3)</M> in <M>W(5,3)</M>.
  
<Example>
<#Include SYSTEM "../examples/include/examples_embedW.include"> 
</Example>
</Subsection>


<Subsection>
<Heading>Spreads of <M>W(5,3)</M></Heading>
A spread of <M>W(5,q)</M> is a set of <Alt Not="HTML"><M>q^3+1</M></Alt><Alt
Only="HTML">q&lt;sup>3&lt;/sup>+1</Alt> planes which
partition the points of <M>W(5,q)</M>. Here we enumerate all spreads of
<M>W(5,3)</M> which have a set-wise stabiliser of order a multiple of 13.
  
<Example>
<#Include SYSTEM "../examples/include/examples_spreads.include"> 
</Example>
</Subsection>

<Subsection>
<Heading>The Patterson ovoid</Heading>
  
In this example, we construct the unique ovoid
of the parabolic quadric <M>Q(6,3)</M>, first discovered by Patterson, but for
which was given a nice construction by E. E. Shult.

We begin with the ``sums of squares'' quadratic
form over <M>GF(3)</M>.

<Example>
gap> id := IdentityMat(7, GF(3));;
gap> form := QuadraticFormByMatrix(id, GF(3));
&lt; quadratic form &gt;
gap> ps := PolarSpace( form );
&lt;polar space of dimension 6 over GF(3)&gt;
</Example>

The construction of the ovoid (a la Shult):

<Example>
gap> psl32 := PSL(3,2);
Group([ (4,6)(5,7), (1,2,4)(3,6,5) ])
gap> reps:=[[1,1,1,0,0,0,0], [-1,1,1,0,0,0,0],
            [1,-1,1,0,0,0,0], [1,1,-1,0,0,0,0]]*Z(3)^0;
[ [ Z(3)^0, Z(3)^0, Z(3)^0, 0*Z(3), 0*Z(3), 0*Z(3), 0*Z(3) ], 
  [ Z(3), Z(3)^0, Z(3)^0, 0*Z(3), 0*Z(3), 0*Z(3), 0*Z(3) ], 
  [ Z(3)^0, Z(3), Z(3)^0, 0*Z(3), 0*Z(3), 0*Z(3), 0*Z(3) ], 
  [ Z(3)^0, Z(3)^0, Z(3), 0*Z(3), 0*Z(3), 0*Z(3), 0*Z(3) ] ]
gap> ovoid := Union( List(reps, x-> Orbit(psl32, x, Permuted)) );;
gap> ovoid := List(ovoid, x -> VectorSpaceToElement(ps, x));;
</Example>

We check that this is indeed an ovoid...

<Example>
gap> planes := AsList( Planes( ps ) );;
gap> ForAll(planes, p -> Number(ovoid, x -> x in p) = 1);
true
</Example>

The stabiliser is interesting since it yields the embedding of
<M>Sp(6,2)</M> in <M>PO(7,3)</M>. To efficiently compute the set-wise stabiliser,
we refer to the induced permutation representation.

<Example>
gap> g := IsometryGroup( ps );
&lt;projective semilinear group of size 9170703360 with 2 generators&gt;
gap> stabovoid := SetwiseStabilizer(g, OnProjSubspaces, ovoid)!.setstab;
&lt;projective semilinear group with 14 generators&gt;
gap> DisplayCompositionSeries(stabovoid);
G (size 1451520)
 | B(3,2) = O(7,2) ~ C(3,2) = S(6,2)
1 (size 1)
gap> OrbitLengths(stabovoid, ovoid);
[ 28 ]
gap> IsTransitive(stabovoid, ovoid);
true
</Example>
</Subsection>


</Section>

<Section>
<Heading>Elation generalised quadrangles</Heading>

<Subsection>
<Heading>The classical q-clan</Heading>

In this example, we construct a classical elation
generalised quadrangle from a q-clan, and we see that
the associated BLT-set is a conic.

  
<Example>
<#Include SYSTEM "../examples/include/examples_qclan.include"> 
</Example>
</Subsection>


<Subsection>
<Heading>Two ways to construct a flock generalised quadrangle from a Kantor-Knuth semifield q-clan</Heading>

We will construct an elation generalised quadrangle directly from the <E>Kantor-Knuth semifield q-clan</E>
and also via its corresponding BLT-set. The q-clan in question here are the set of matrices <M>C_t</M> of the form


<Alt Only="HTML">
&lt;table style="color:#000">&lt;tr>
&lt;td>&lt;table border=0 cellpadding=0 cellspacing=0px style="border-left:1px solid #000; border-right:1px solid #000; color:#000">&lt;tr>
&lt;td style ="border-top:1px solid #000; border-bottom:1px solid #000;">&nbsp;&lt;/td>&lt;td>&lt;table border=0 cellpadding=0 cellspacing=0 style="color:#000;">
&lt;/tr>
&lt;td align="center" valign="center" width=30>t&lt;/td>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td align="center" valign="center" width=30>0&lt;/td>
&lt;td align="center" valign="center" width=30>-nt&lt;sup>&#966;&lt;/sup>&lt;/td>
&lt;/tr>
&lt;/table>&lt;/td>
&lt;td style ="border-top:1px solid #000; border-bottom:1px solid #000;">&nbsp;&lt;/td>&lt;/tr>&lt;/table>&lt;/td>
&lt;td align="center" valign="center">&lt;table border=0 cellpadding=0 cellspacing=0px style="color:#000">
<!--&lt;tr>&lt;td>&lt;sup>-1&lt;/sup>&lt;/td>&lt;/tr>-->
&lt;tr>&lt;td>&nbsp;&lt;/td>&lt;/tr>
&lt;tr>&lt;td>&nbsp;&lt;/td>&lt;/tr>
&lt;/table>&lt;/td>
&lt;/tr>&lt;/table>
</Alt>
<Alt Only="LaTeX"><M>
\left(\begin{array}{cc} 
t &amp; 0 \\
0 &amp; -nt^\phi
\end{array}\right)
</M>
</Alt>

where t runs over the elements of <M>GF(q)</M>, <M>q</M> is odd and not prime, <M>n</M> is a fixed nonsquare 
and <Alt Not="HTML">\phi </Alt><Alt Only="HTML">&#966;</Alt> is a nontrivial automorphism of <M>GF(q)</M>.

<Example>
<#Include SYSTEM "../examples/include/examples_KantorKnuth.include"> 
</Example>


</Subsection>

</Section>


<Section>
<Heading>Diagram geometries</Heading>

<Subsection>
<Heading>A rank 4 geometry for <M>PSL(2,11)</M></Heading>

Here we look at a particular flag-transitive geometry constructed from
four subgroups of <M>PSL(2,11)</M>, and we construct the diagram for this geometry.
To view this diagram, you need to either use a postscript viewer or
a dotty viewer (such as GraphViz). 

<Example>
<#Include SYSTEM "../examples/include/examples_PSL211.include"> 
</Example>

The output of this example uses <C>dotty</C> which is a sophisticated graph
drawing program. In a later version of our package, we might use <C>neato</C> to make a diagram with straight lines.
Here is what the output looks like:

<Alt Only="HTML">&lt;img src="PSL211.jpg">&lt;/img></Alt>
<Alt Only="LaTeX">\includegraphics{PSL211.jpg}</Alt>

</Subsection>


</Section>

</Chapter>
